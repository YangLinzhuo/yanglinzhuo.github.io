<?xml version="1.0"?>
<rss version="2.0">
    <channel>
        <title>林•初夏 • Posts by &#34;valine&#34; tag</title>
        <link>https://linn-ylz.com</link>
        <description>Linn 的个人博客</description>
        <language>zh-CN</language>
        <pubDate>Sat, 09 Nov 2024 18:09:10 +0800</pubDate>
        <lastBuildDate>Sat, 09 Nov 2024 18:09:10 +0800</lastBuildDate>
        <category>AncientBook</category>
        <category>Book</category>
        <category>Essay</category>
        <category>Game</category>
        <category>Music</category>
        <category>Movie</category>
        <category>Hexo</category>
        <category>Valine</category>
        <category>Waline</category>
        <category>TiddlyWiki</category>
        <category>Fishing</category>
        <category>Computer-Science</category>
        <category>Algorithm</category>
        <category>Cpp</category>
        <category>Binary-Search</category>
        <category>CUDA</category>
        <category>Coding-Interviews</category>
        <category>Configs</category>
        <category>WSL2</category>
        <category>CLion</category>
        <category>PyTorch</category>
        <category>Oh-My-Zsh</category>
        <category>Powershell</category>
        <category>WSL</category>
        <category>Emacs</category>
        <category>Programming-Pearls</category>
        <category>Python</category>
        <category>YAML</category>
        <category>dataclass</category>
        <category>Type-Annotation</category>
        <category>CUTLASS</category>
        <category>CUTE</category>
        <category>History</category>
        <category>ChineseHistory</category>
        <category>Table</category>
        <item>
            <guid isPermalink="true">https://linn-ylz.com/Hexo/transfer-waline-2/</guid>
            <title>ShokaX 主题迁移</title>
            <link>https://linn-ylz.com/Hexo/transfer-waline-2/</link>
            <category>Hexo</category>
            <category>Valine</category>
            <category>Waline</category>
            <pubDate>Sat, 09 Nov 2024 18:09:10 +0800</pubDate>
            <description><![CDATA[ &lt;h1 id=&#34;前言&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#前言&#34;&gt;#&lt;/a&gt; 前言&lt;/h1&gt;
&lt;p&gt;近日尝试在新电脑上配置博客环境，发现原来的  &lt;code&gt;Shoka&lt;/code&gt;  主题已经过于陈旧了，环境搭建非常困难，依赖的软件包版本老旧，并且原作者没有时间在进行维护和开发，已经到了需要动手解决以下的时候了。在之前的文章 &lt;a href=&#34;/Computer-Science/Algorithm/about-binary-search/&#34; title=&#34;二分搜索探究&#34;&gt;《从 Valine 迁移到 Waline》&lt;/a&gt; 中，介绍了从  &lt;code&gt;Valine&lt;/code&gt;  迁移到  &lt;code&gt;Waline&lt;/code&gt;  的方法。因为  &lt;code&gt;Shoka&lt;/code&gt;  主题的原因，在迁移过程中遇到了很多问题，只能通过一些临时的方法来解决，造成了维护上的困难。这也最终让我下定决心更换到新的  &lt;code&gt;ShokaX&lt;/code&gt;  主题。&lt;/p&gt;
&lt;p&gt;一段时间前曾经尝试过切换到  &lt;code&gt;ShokaX&lt;/code&gt;  主题，但是当时这个新主题也还未稳定，存在一些问题，加之工作太忙，没时间抽空完成迁移。最近  &lt;code&gt;ShokaX&lt;/code&gt;  主题也算稳定了下来，于是趁着在新电脑上搭建环境的机会，正好一并迁移过来。&lt;/p&gt;
&lt;p&gt;按照  &lt;code&gt;ShokaX&lt;/code&gt;  自己的说法，它是 &amp;quot; &lt;code&gt;Shoka&lt;/code&gt;  的一个二次开发版（算精神续作），致力于提高性能和优化魔改体验，诞生原因是目前  &lt;code&gt;Shoka&lt;/code&gt;  已经三年没有更新了，积压了大量 BUG 和功能请求。&amp;quot;&lt;/p&gt;
&lt;p&gt;本篇文章就是对迁移过程中问题的一个记录，便于之后复现博客环境。&lt;/p&gt;
&lt;h1 id=&#34;第三方工具&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#第三方工具&#34;&gt;#&lt;/a&gt; 第三方工具&lt;/h1&gt;
&lt;h2 id=&#34;git&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#git&#34;&gt;#&lt;/a&gt; Git&lt;/h2&gt;
&lt;p&gt;这次新环境的网络遇到些问题， &lt;code&gt;Git&lt;/code&gt;  仓库总是无法拉取。&lt;/p&gt;
&lt;p&gt;首先是报错  &lt;code&gt;port 22 connection refused&lt;/code&gt; ，这个参考外网的一个办法&lt;sup class=&#34;footnote-ref&#34;&gt;&lt;a href=&#34;#fn1&#34; id=&#34;fnref1&#34;&gt;[1]&lt;/a&gt;&lt;/sup&gt;解决了。其做法是在  &lt;code&gt;~/.ssh/config&lt;/code&gt;  中添加如下配置，让  &lt;code&gt;Git&lt;/code&gt;  连接走 443 端口：&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-text&#34;&gt;# GitHub config
Host github.com
    Hostname ssh.github.com
    Port 443
    User git
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;上述问题解决后，一段时间能够正常工作，后来又遇到问题，这次换 443 端口也拒绝连接请求了...。最后配置了  &lt;code&gt;WSL&lt;/code&gt;  环境的代理之后才总算是告一段落。&lt;/p&gt;
&lt;p&gt;具体而言是添加如下环境变量：&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;export hostip=$(ip route show | grep -i default | awk &#39;&amp;#123; print $3&amp;#125;&#39;)
export https_proxy=&amp;quot;http://$&amp;#123;hostip&amp;#125;:7890&amp;quot;
export http_proxy=&amp;quot;http://$&amp;#123;hostip&amp;#125;:7890&amp;quot;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;也可以在  &lt;code&gt;.bashrc&lt;/code&gt;  或者  &lt;code&gt;.zshrc&lt;/code&gt;  等环境配置文件中添加，这样每次启动之后就会自动设置代理。这里的端口注意修改为自己代理软件对应的端口。这里主要参考了一篇 WSL2 环境使用 Clash 代理的记录&lt;sup class=&#34;footnote-ref&#34;&gt;&lt;a href=&#34;#fn2&#34; id=&#34;fnref2&#34;&gt;[2]&lt;/a&gt;&lt;/sup&gt;以及微软官方 WSL 使用命令说明&lt;sup class=&#34;footnote-ref&#34;&gt;&lt;a href=&#34;#fn3&#34; id=&#34;fnref3&#34;&gt;[3]&lt;/a&gt;&lt;/sup&gt;。&lt;/p&gt;
&lt;h2 id=&#34;nodejs&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#nodejs&#34;&gt;#&lt;/a&gt; Node.js&lt;/h2&gt;
&lt;p&gt;然后是  &lt;code&gt;Node.js&lt;/code&gt;  安装。这里推荐使用  &lt;code&gt;nvm&lt;/code&gt; &lt;sup class=&#34;footnote-ref&#34;&gt;&lt;a href=&#34;#fn4&#34; id=&#34;fnref4&#34;&gt;[4]&lt;/a&gt;&lt;/sup&gt; 这个软件包来管理  &lt;code&gt;Node.js&lt;/code&gt;  的环境。&lt;/p&gt;
&lt;p&gt;如果想使用其他方法安装，可以参考相关博客&lt;sup class=&#34;footnote-ref&#34;&gt;&lt;a href=&#34;#fn5&#34; id=&#34;fnref5&#34;&gt;[5]&lt;/a&gt;&lt;/sup&gt;。&lt;/p&gt;
&lt;p&gt;首先执行以下命令安装  &lt;code&gt;nvm&lt;/code&gt; ：&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.40.1/install.sh | bash
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;注意版本号可能会有差别。&lt;/p&gt;
&lt;p&gt;然后初始化环境：&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;source ~/.zshrc
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;使用  &lt;code&gt;bash&lt;/code&gt;  的话就是  &lt;code&gt;source ~/.bashrc&lt;/code&gt; 。&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;nvm list-remote  # 查看 NVM 哪些版本的 Node 可用
nvm install --lts  # 下载lts最新版

# 验证版本
node -v
npm -v
&lt;/code&gt;&lt;/pre&gt;
&lt;h1 id=&#34;shokax-主题安装&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#shokax-主题安装&#34;&gt;#&lt;/a&gt; ShokaX 主题安装&lt;/h1&gt;
&lt;p&gt;&lt;code&gt;ShokaX&lt;/code&gt;  官方推荐使用  &lt;code&gt;pnpm&lt;/code&gt;  管理包，因此需要先安装：&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;npm install -g pnpm
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;code&gt;ShokaX&lt;/code&gt;  的官方文档&lt;sup class=&#34;footnote-ref&#34;&gt;&lt;a href=&#34;#fn6&#34; id=&#34;fnref6&#34;&gt;[6]&lt;/a&gt;&lt;/sup&gt;中有详细的安装说明。如果不想折腾，那么可以选择其中的第一种方式，所谓 &amp;quot;ShokaX 即食罐头&amp;quot;：&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;git clone https://github.com/theme-shoka-x/shokax-can --depth=1
cd shokax-can
pnpm install
hexo s # 如果报错更换为 pnpm dlx hexo s
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;我因为有之前写的文档，所以采用  &lt;code&gt;Git&lt;/code&gt;  安装的方式，将  &lt;code&gt;ShokaX&lt;/code&gt;  主题安装到  &lt;code&gt;themes&lt;/code&gt;  文件夹下：&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;cd themes
git clone https://github.com/theme-shoka-x/hexo-theme-shokaX.git # 可替换为你自己的项目
cd shokax
node ./toolbox/compiler.mjs
cd ../..
hexo s # 或 pnpm dlx hexo s
node ./themes/shokax/toolbox/hoistdep.mjs
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;上述  &lt;code&gt;node&lt;/code&gt;  命令执行中可能会缺少一些依赖，直接安装即可：&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;# 安装 node 执行命令依赖
pnpm install esbuild
pnpm install glob

# 安装主题依赖
pnpm install
&lt;/code&gt;&lt;/pre&gt;
&lt;h1 id=&#34;shokax-主题配置&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#shokax-主题配置&#34;&gt;#&lt;/a&gt; ShokaX 主题配置&lt;/h1&gt;
&lt;p&gt;主题配置主要参考  &lt;code&gt;ShokaX&lt;/code&gt;  的官方文档&lt;sup class=&#34;footnote-ref&#34;&gt;&lt;a href=&#34;#fn6&#34; id=&#34;fnref6:1&#34;&gt;[6:1]&lt;/a&gt;&lt;/sup&gt;中的配置相关部分，其中注意以下配置：&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;syntax_highlighter: false
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;在  &lt;code&gt;hexo&lt;/code&gt;  大于等于  &lt;code&gt;7.0.0-rc1&lt;/code&gt;  的时候需要按照上面的方式设置，否则可能代码块渲染不对。&lt;/p&gt;
&lt;p&gt;此外， &lt;code&gt;ShokaX&lt;/code&gt;  中的某些图片资源存放在了  &lt;code&gt;assets&lt;/code&gt;  文件夹而非原来的  &lt;code&gt;images&lt;/code&gt;  文件夹，如果有图片链接出现了问题，可以  &lt;code&gt;F12&lt;/code&gt;  浏览器工具查看图片是否路径正确。&lt;/p&gt;
&lt;p&gt;其他的配置基本上是从原来的  &lt;code&gt;Shoka&lt;/code&gt;  配置中复制而来。&lt;/p&gt;
&lt;h1 id=&#34;重新部署-vercel&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#重新部署-vercel&#34;&gt;#&lt;/a&gt; 重新部署 Vercel&lt;/h1&gt;
&lt;p&gt;在本地部署之后，发现评论系统的无法访问到后端的地址。经过排查发现是 Vercel 部署的评论后端和当前主题使用的  &lt;code&gt;waline&lt;/code&gt;  版本不匹配导致的。新版的  &lt;code&gt;waline&lt;/code&gt;  在请求链接中会添加  &lt;code&gt;/api&lt;/code&gt;  的部分，而原来的版本中则没有，因此访问会产生 404。解决方法即用新版本  &lt;code&gt;waline&lt;/code&gt;  重新部署。具体部署步骤可以查看之前的文章 &lt;a href=&#34;/Computer-Science/Algorithm/about-binary-search/&#34; title=&#34;二分搜索探究&#34;&gt;《从 Valine 迁移到 Waline》&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;记得复制环境变量以及添加域名。&lt;/p&gt;
&lt;h1 id=&#34;一键部署&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#一键部署&#34;&gt;#&lt;/a&gt; 一键部署&lt;/h1&gt;
&lt;p&gt;一键部署需要安装  &lt;code&gt;hexo&lt;/code&gt;  的工具：&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;pnpm install hexo-deployer-git
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;并在配置文件中配置部署的仓库信息：&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;deploy:
  type: git
  repo: https://github.com/YangLinzhuo/yanglinzhuo.github.io
  branch: master
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;搭建完成并部署到  &lt;code&gt;GitHubPages&lt;/code&gt;  之后发现网页白屏，排查发现是生成的  &lt;code&gt;index.html&lt;/code&gt;  文件为空&lt;sup class=&#34;footnote-ref&#34;&gt;&lt;a href=&#34;#fn7&#34; id=&#34;fnref7&#34;&gt;[7]&lt;/a&gt;&lt;/sup&gt;。重新生成部署后解决。&lt;/p&gt;
&lt;h1 id=&#34;修改主题&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#修改主题&#34;&gt;#&lt;/a&gt; 修改主题&lt;/h1&gt;
&lt;h2 id=&#34;footer-显示效果修改&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#footer-显示效果修改&#34;&gt;#&lt;/a&gt;  &lt;code&gt;footer&lt;/code&gt;  显示效果修改&lt;/h2&gt;
&lt;p&gt;排查中顺便修改了一下主题内容  &lt;code&gt;themes/shokax/layout/_partials/post/footer.pug&lt;/code&gt; ：&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-pug&#34;&gt;div(class=&amp;quot;meta&amp;quot;)
    if theme.twikoo.enable || theme.waline.pageview
        span(class=&amp;quot;item&amp;quot;)
            span(class=&amp;quot;icon&amp;quot;)
                i(class=&amp;quot;ic i-eye&amp;quot;)
            span(class=&amp;quot;text&amp;quot;)
                !=__(&#39;footer.total_views&#39;) + __(&#39;symbol.colon&#39;)
            - var prefixedPath = post.path.startsWith(&#39;/&#39;) ? post.path : &#39;/&#39; + post.path
            span(id=&amp;quot;twikoo_visitors&amp;quot; class=&amp;quot;waline-pageview-count&amp;quot; data-path=prefixedPath)
                !=__(&#39;footer.loading&#39;)
    if date(post.date) !== date(post.updated) || time(post.date) !== time(post.updated)
        span(class=&amp;quot;item&amp;quot;)
            span(class=&amp;quot;icon&amp;quot;)
                i(class=&amp;quot;ic i-calendar-check&amp;quot;)
            span(class=&amp;quot;text&amp;quot;)
                != __(&#39;post.edited&#39;) + __(&#39;symbol.space&#39;)
            time(title=__(&#39;post.modified&#39;) + __(&#39;symbol.colon&#39;) + full_date(post.updated) itemprop=&amp;quot;dateModified&amp;quot; datetime=moment(post.updated).format())
                != date(post.updated)

    != shokax_inject(&#39;postMeta&#39;)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;这里把浏览量和更新日期的逻辑分开了，并且修改了原来代码中的一些硬编码的文本内容，使用  &lt;code&gt;i18n&lt;/code&gt;  文件中的文本统一替换。&lt;/p&gt;
&lt;h2 id=&#34;404-页面&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#404-页面&#34;&gt;#&lt;/a&gt;  &lt;code&gt;404&lt;/code&gt;  页面&lt;/h2&gt;
&lt;p&gt;默认情况下的 404 页面不显示内容。这里需要修改  &lt;code&gt;themes/shokax/layout/page.pug&lt;/code&gt;  文件中的内容：&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-pug&#34;&gt;block content
    if page.type === &#39;categories&#39;
        div(class=&amp;quot;collapse wrap&amp;quot;)
            h2(class=&amp;quot;item title&amp;quot;)
                a(href=url_for(site.path))
                    != __(&#39;menu.home&#39;)
                small
                != _p(&#39;counter.categories&#39;, site.categories.length)
            != _list_categories(3)
    else if page.type === &#39;tags&#39;
        div(class=&amp;quot;collapse wrap&amp;quot;)
            h2(class=&amp;quot;item title&amp;quot;)
                a(href=url_for(site.path))
                    != __(&#39;menu.home&#39;)
                small
                != _p(&#39;counter.tag_cloud&#39;, site.tags.length)
            div(class=&amp;quot;tag cloud&amp;quot;)
                != tagcloud(&amp;#123;min_font: theme.tagcloud.min,max_font: theme.tagcloud.max,amount: theme.tagcloud.amount,color: true,start_color: theme.tagcloud.start,end_color: theme.tagcloud.end&amp;#125;)
    else if page.type == &#39;404&#39;
        div(class=&amp;quot;page wrap&amp;quot;)
            div(class=&amp;quot;notfound&amp;quot;)
                != __(&#39;title.not_found&#39;)
    else
        div(class=&amp;quot;page wrap&amp;quot;)
            != partial(&#39;_partials/post/post.pug&#39;, &amp;#123;post: page&amp;#125;)
        +CommentRender
&lt;/code&gt;&lt;/pre&gt;
&lt;hr class=&#34;footnotes-sep&#34; /&gt;
&lt;section class=&#34;footnotes&#34;&gt;
&lt;ol class=&#34;footnotes-list&#34;&gt;
&lt;li id=&#34;fn1&#34; class=&#34;footnote-item&#34;&gt;&lt;p&gt;&lt;a href=&#34;https://backendtea.com/post/ssh-could-not-connect/&#34;&gt;How to fix &amp;quot;connect to host github.com port 22: Operation timed out&amp;quot; | BackEndTea&lt;/a&gt; &lt;a href=&#34;#fnref1&#34; class=&#34;footnote-backref&#34;&gt;↩︎&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id=&#34;fn2&#34; class=&#34;footnote-item&#34;&gt;&lt;p&gt;&lt;a href=&#34;https://gist.github.com/libChan/3a804a46b532cc326a2ee55b27e8ac19?permalink_comment_id=4841732&#34;&gt;WSL2 使用 clash for windows 代理&lt;/a&gt; &lt;a href=&#34;#fnref2&#34; class=&#34;footnote-backref&#34;&gt;↩︎&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id=&#34;fn3&#34; class=&#34;footnote-item&#34;&gt;&lt;p&gt;&lt;a href=&#34;https://learn.microsoft.com/zh-cn/windows/wsl/networking#identify-ip-address&#34;&gt;使用 WSL 访问网络应用程序 | Microsoft Learn&lt;/a&gt; &lt;a href=&#34;#fnref3&#34; class=&#34;footnote-backref&#34;&gt;↩︎&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id=&#34;fn4&#34; class=&#34;footnote-item&#34;&gt;&lt;p&gt;&lt;a href=&#34;https://github.com/nvm-sh/nvm&#34;&gt;nvm-sh/nvm: Node Version Manager - POSIX-compliant bash script to manage multiple active node.js versions&lt;/a&gt; &lt;a href=&#34;#fnref4&#34; class=&#34;footnote-backref&#34;&gt;↩︎&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id=&#34;fn5&#34; class=&#34;footnote-item&#34;&gt;&lt;p&gt;&lt;a href=&#34;https://www.cnblogs.com/echohye/p/18271522&#34;&gt;Ubuntu 22.04 安装 NodeJS - 槑孒 - 博客园&lt;/a&gt; &lt;a href=&#34;#fnref5&#34; class=&#34;footnote-backref&#34;&gt;↩︎&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id=&#34;fn6&#34; class=&#34;footnote-item&#34;&gt;&lt;p&gt;&lt;a href=&#34;https://docs-hexo.shokax.top/getting-started/&#34;&gt;安装 ShokaX | ShokaX Docs&lt;/a&gt; &lt;a href=&#34;#fnref6&#34; class=&#34;footnote-backref&#34;&gt;↩︎&lt;/a&gt; &lt;a href=&#34;#fnref6:1&#34; class=&#34;footnote-backref&#34;&gt;↩︎&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id=&#34;fn7&#34; class=&#34;footnote-item&#34;&gt;&lt;p&gt;&lt;a href=&#34;https://blog.csdn.net/weixin_45178128/article/details/121230175&#34;&gt;Hexo+github 搭博客，搭完后访问发现白屏了，什么也没有。_hexo 部署后网站空白 - CSDN 博客&lt;/a&gt; &lt;a href=&#34;#fnref7&#34; class=&#34;footnote-backref&#34;&gt;↩︎&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/section&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://linn-ylz.com/Hexo/transfer-waline/</guid>
            <title>从 Valine 迁移到 Waline</title>
            <link>https://linn-ylz.com/Hexo/transfer-waline/</link>
            <category>Hexo</category>
            <category>Valine</category>
            <category>Waline</category>
            <pubDate>Sun, 24 Jul 2022 15:09:21 +0800</pubDate>
            <description><![CDATA[ &lt;div class=&#34;note info&#34;&gt;
&lt;p&gt;2022-12-02 更新&lt;br /&gt;
根据评论区小伙伴 @&lt;a href=&#34;https://maredevi.fun/&#34;&gt;MareDevi&lt;/a&gt; 的介绍，成功解决了文章浏览量显示的问题，撒花！🌸&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;note warning&#34;&gt;
&lt;p&gt;&lt;s&gt;想来想去，很多问题还是没有解决，主要还是  &lt;code&gt;Waline&lt;/code&gt;  与博客主题不完全兼容，加上自己对前端也不是很了解，最后还是改了回去。真是太折腾了。流石程序员。&lt;/s&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;h1 id=&#34;前言&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#前言&#34;&gt;#&lt;/a&gt; 前言&lt;/h1&gt;
&lt;p&gt;由于  &lt;code&gt;Valine&lt;/code&gt;  评论系统的通知问题以及其他原因，考虑更换  &lt;code&gt;Waline&lt;/code&gt;  作为新的评论系统，但是原来的  &lt;code&gt;Shoka&lt;/code&gt;  主题使用的是作者修改后的  &lt;code&gt;MiniValine&lt;/code&gt;  系统，在修改上碰到了很大的麻烦，&lt;s&gt;最后只能忍痛割爱更换了现在的  &lt;code&gt;butterfly&lt;/code&gt;  主题。这次更换也是对博客进行了一个大刀阔斧的修改，但是也摆脱了  &lt;code&gt;Valine&lt;/code&gt;  系统这个累赘。原来经常有评论无法及时提醒，而我自己有时候又不会经常上网站查看，因此有的消息过了很久才能发现。最后还是下定决心进行迁移。&lt;/s&gt;&lt;/p&gt;
&lt;p&gt;经过查找，发现了一个小姐姐提供的修改方法&lt;sup class=&#34;footnote-ref&#34;&gt;&lt;a href=&#34;#fn1&#34; id=&#34;fnref1&#34;&gt;[1]&lt;/a&gt;&lt;/sup&gt;，在  &lt;code&gt;Shoka&lt;/code&gt;  中能够引入  &lt;code&gt;Waline&lt;/code&gt;  。最后还是保留了  &lt;code&gt;Shoka&lt;/code&gt;  主题，然后将评论系统换成了  &lt;code&gt;Waline&lt;/code&gt;  的系统，虽然还有一些兼容性上的问题，但总归还算保住了现在这个好看的主题。有些小问题折腾了几天也没能完全解决，姑且就到此为止吧。关于遇到的问题，在文章最后一小节有补充。&lt;/p&gt;
&lt;h1 id=&#34;域名注册&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#域名注册&#34;&gt;#&lt;/a&gt; 域名注册&lt;/h1&gt;
&lt;p&gt;这次顺便更换了一个自己的域名。经过一番搜索后选择了 &lt;a href=&#34;https://www.dynadot.com/&#34;&gt;Dynadot&lt;/a&gt; 域名商，域名就是现在的  &lt;code&gt;linn-ylz.com&lt;/code&gt; 。依照教程&lt;sup class=&#34;footnote-ref&#34;&gt;&lt;a href=&#34;#fn2&#34; id=&#34;fnref2&#34;&gt;[2]&lt;/a&gt;&lt;/sup&gt;购买域名，全部完成之后，使用  &lt;code&gt;Cloudflare&lt;/code&gt;  的  &lt;code&gt;DNS&lt;/code&gt;  服务，参考另一个教程&lt;sup class=&#34;footnote-ref&#34;&gt;&lt;a href=&#34;#fn3&#34; id=&#34;fnref3&#34;&gt;[3]&lt;/a&gt;&lt;/sup&gt;。&lt;/p&gt;
&lt;p&gt;以上的步骤按照教程基本能够比较轻松地完成，不多赘述。&lt;/p&gt;
&lt;h2 id=&#34;自定义域名&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#自定义域名&#34;&gt;#&lt;/a&gt; 自定义域名&lt;/h2&gt;
&lt;p&gt;在  &lt;code&gt;Vercel&lt;/code&gt;  中设置自定义域名需要和  &lt;code&gt;Cloudflare&lt;/code&gt;  的配置相匹配，具体可以参考这篇&lt;a href=&#34;https://tangly1024.com/article/vercel-domain&#34;&gt;教程&lt;/a&gt;。需要注意，在  &lt;code&gt;Cloudflare&lt;/code&gt;  中，需要将  &lt;code&gt;SSL/TLS&lt;/code&gt;  的加密模式设置为完全（Full），否则可能会遇到 “重定向过多” 的错误而无法访问。&lt;/p&gt;
&lt;h1 id=&#34;更换-waline&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#更换-waline&#34;&gt;#&lt;/a&gt; 更换 Waline&lt;/h1&gt;
&lt;p&gt;按照  &lt;code&gt;Waline&lt;/code&gt;  的&lt;a href=&#34;https://waline.js.org/guide/get-started.html&#34;&gt;教程&lt;/a&gt;进行配置。&lt;/p&gt;
&lt;h2 id=&#34;leancloud-设置&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#leancloud-设置&#34;&gt;#&lt;/a&gt; LeanCloud 设置&lt;/h2&gt;
&lt;p&gt;因为之前已经注册配置过  &lt;code&gt;LeanCloud&lt;/code&gt;  了，所以这里不再赘述。可以参考之前的文章 &lt;a href=&#34;/Hexo/blog-comment-push/&#34; title=&#34;Shoka 评论推送功能实现&#34;&gt;Shoka 评论推送功能实现&lt;/a&gt;。&lt;/p&gt;
&lt;h2 id=&#34;vercel-配置&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#vercel-配置&#34;&gt;#&lt;/a&gt; Vercel 配置&lt;/h2&gt;
&lt;p&gt;注册  &lt;code&gt;Vercel&lt;/code&gt;  完成之后，按照  &lt;code&gt;Waline&lt;/code&gt;  的官方教程进行配置。我在这里碰到了一点问题，从  &lt;code&gt;Waline&lt;/code&gt;  的入口进入  &lt;code&gt;Vercel&lt;/code&gt;  之后，在选择  &lt;code&gt;GitHub&lt;/code&gt;  仓库的时无法填写表格，因此无法直接进行 deploy。但是直接选择自己的仓库却又可以。最后只能采用曲线救国的方法，自己 Fork 了仓库，然后再从自己的仓库中进行选择。然而直接 deploy 仓库会报错  &lt;code&gt;This Serverless Function has crashed&lt;/code&gt; ，据官方说法，只需要复制  &lt;code&gt;example&lt;/code&gt;  文件夹下的内容即可&lt;sup class=&#34;footnote-ref&#34;&gt;&lt;a href=&#34;#fn4&#34; id=&#34;fnref4&#34;&gt;[4]&lt;/a&gt;&lt;/sup&gt;。&lt;/p&gt;
&lt;p&gt;在  &lt;code&gt;Vercel&lt;/code&gt;  的  &lt;code&gt;Settings&lt;/code&gt;  中，选择  &lt;code&gt;Environment Variables&lt;/code&gt;  添加环境变量，主要是  &lt;code&gt;LEAN_ID&lt;/code&gt; ， &lt;code&gt;LEAN_KEY&lt;/code&gt; ， &lt;code&gt;LEAN_MASTER_KEY&lt;/code&gt;  三个值。&lt;/p&gt;
&lt;div class=&#34;note info&#34;&gt;
&lt;p&gt;如果是使用的国内版的  &lt;code&gt;LeanCloud&lt;/code&gt; ，还需要额外设置  &lt;code&gt;LEAN_SERVER&lt;/code&gt;  变量。&lt;/p&gt;
&lt;/div&gt;
&lt;h3 id=&#34;添加自定义域名&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#添加自定义域名&#34;&gt;#&lt;/a&gt; 添加自定义域名&lt;/h3&gt;
&lt;p&gt;参照  &lt;code&gt;Waline&lt;/code&gt;  教程中的内容，在  &lt;code&gt;Settings&lt;/code&gt;  中选择  &lt;code&gt;Domain&lt;/code&gt;  进入域名配置页。教程的说明进行配置。&lt;/p&gt;
&lt;p&gt;关于在域名服务器商处添加新的  &lt;code&gt;CNAME&lt;/code&gt;  解析记录这一条，由于我是在  &lt;code&gt;Cloudflare&lt;/code&gt;  注册的  &lt;code&gt;DNS&lt;/code&gt;  服务，因此需要在其中进行配置。&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&#34;text-align:left&#34;&gt;Type&lt;/th&gt;
&lt;th style=&#34;text-align:left&#34;&gt;Name&lt;/th&gt;
&lt;th style=&#34;text-align:left&#34;&gt;Value&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;CNAME&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;example&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;&lt;a href=&#34;http://cname.vercel-dns.com&#34;&gt;cname.vercel-dns.com&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;table&gt;
&lt;caption id=&#34;&#34; style=&#34;caption-side: bottom&#34;&gt;域名配置参数表&lt;/caption&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&#34;text-align:left&#34;&gt;Type&lt;/th&gt;
&lt;th style=&#34;text-align:left&#34;&gt;Name&lt;/th&gt;
&lt;th style=&#34;text-align:left&#34;&gt;Value&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;CNAME&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;example&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;&lt;a href=&#34;http://cname.vercel-dns.com&#34;&gt;cname.vercel-dns.com&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;按我自己的例子，我的域名是  &lt;code&gt;linn-ylz.com&lt;/code&gt; ，我选择的用于  &lt;code&gt;Waline&lt;/code&gt;  的域名是  &lt;code&gt;comments.linn-ylz.com&lt;/code&gt; ，那么在  &lt;code&gt;Cloudflare&lt;/code&gt;  配置中添加  &lt;code&gt;CNAME&lt;/code&gt;  配置，名称输入  &lt;code&gt;comments&lt;/code&gt; ，对应的值为  &lt;code&gt;cname.vercel-dns.com&lt;/code&gt; 。&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; data-src=&#34;/images/transfer-waline/vercel-cloudflare-config.png&#34; alt=&#34;Cloudflare 域名配置&#34; /&gt;&lt;/p&gt;
&lt;p&gt;上述配置完成之后可以从  &lt;code&gt;Vercel&lt;/code&gt;  中打开网页进行评论测试。&lt;/p&gt;
&lt;h1 id=&#34;邮件通知配置&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#邮件通知配置&#34;&gt;#&lt;/a&gt; 邮件通知配置&lt;/h1&gt;
&lt;p&gt;这一部分主要参考  &lt;code&gt;Waline&lt;/code&gt;  中的&lt;a href=&#34;https://waline.js.org/guide/server/notification.html&#34;&gt;评论通知&lt;/a&gt;教程内容。我选择的是其中的邮件通知服务。教程中列举了以下必须配置的内容：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;SMTP_SERVICE&lt;/code&gt; : SMTP 邮件发送服务提供商。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;SMTP_USER&lt;/code&gt; : SMTP 邮件发送服务的用户名，一般为登录邮箱。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;SMTP_PASS&lt;/code&gt; : SMTP 邮件发送服务的密码，一般为邮箱登录密码，部分邮箱 (例如 163) 是单独的 SMTP 密码。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;SITE_NAME&lt;/code&gt; : 网站名称，用于在消息中显示。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;SITE_URL&lt;/code&gt; : 网站地址，用于在消息中显示。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;AUTHOR_EMAIL&lt;/code&gt; : 博主邮箱，用来接收新评论通知。如果是博主发布的评论则不进行提醒通知。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;以上变量均在  &lt;code&gt;Vercel&lt;/code&gt;  中的环境变量设置中添加。由于官方文档惜字如金，所以这里再详细说一下配置的细节。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;SMTP_SERVICE&lt;/code&gt; 、 &lt;code&gt;SMTP_USER&lt;/code&gt; 、 &lt;code&gt;SMTP_PASS&lt;/code&gt;  这三项内容是对应发送通知邮件的邮箱。比如我有两个邮箱，一个是 QQ 邮箱，另一个是 Outlook 邮箱，我选择用 QQ 邮箱发送消息到我的 Outlook 邮箱，通知有评论相关的内容到达。那么以上三项内容便需要填写 QQ 邮箱相关的信息。比如 QQ 邮箱的  &lt;code&gt;SMTP_SERVICE&lt;/code&gt;  是  &lt;code&gt;QQ&lt;/code&gt; ， &lt;code&gt;SMTP_USER&lt;/code&gt;  即对应 QQ 邮箱，如  &lt;code&gt;123456789@qq.com&lt;/code&gt; 。而  &lt;code&gt;SMTP_PASS&lt;/code&gt;  并不是 QQ 邮箱的密码，需要在 QQ 邮箱的 &lt;code&gt;设置&lt;/code&gt; 中，找到  &lt;code&gt;账户&lt;/code&gt;  选项卡，在  &lt;code&gt;POP3/IMAP/SMTP/Exchange/CardDAV/CalDAV服务&lt;/code&gt;  一栏有一个提示，最后有一个生成授权码的可点击链接，点击它之后，会要求你向某个号码发送一条指定内容的短信，发送完成之后会弹窗提示你一个授权码，这个授权码即填写到  &lt;code&gt;SMTP_PASS&lt;/code&gt;  中的内容。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;SITE_NAME&lt;/code&gt;  是消息中显示的网站名称， &lt;code&gt;SITE_URL&lt;/code&gt;  则是网站的地址。注意这里填写的地址要包含前面的协议部分，以我自己为例就是  &lt;code&gt;https://linn-ylz.com&lt;/code&gt; 。&lt;sup class=&#34;footnote-ref&#34;&gt;&lt;a href=&#34;#fn5&#34; id=&#34;fnref5&#34;&gt;[5]&lt;/a&gt;&lt;/sup&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;AUTHOR_EMAIL&lt;/code&gt;  就是用于接收评论通知的邮箱。&lt;/p&gt;
&lt;p&gt;以上内容如果均配置正确，那么应该能够正常接收通知了。&lt;/p&gt;
&lt;h1 id=&#34;修复-leancloud-数据库格式问题&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#修复-leancloud-数据库格式问题&#34;&gt;#&lt;/a&gt; 修复 LeanCloud 数据库格式问题&lt;/h1&gt;
&lt;p&gt;尽管  &lt;code&gt;Waline&lt;/code&gt;  也支持  &lt;code&gt;LeanCloud&lt;/code&gt; ，但是在读取其中的内容时，因为数据库表格键值的不匹配会在显示上出现一些问题，这点可能和我之前使用的是  &lt;code&gt;MiniValine&lt;/code&gt;  有关。&lt;/p&gt;
&lt;h2 id=&#34;阅读量&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#阅读量&#34;&gt;#&lt;/a&gt; 阅读量&lt;/h2&gt;
&lt;p&gt;首先是阅读量的问题，在  &lt;code&gt;LeanCloud&lt;/code&gt;  原来的内容中，存储了之前的网页的访问数量。但是转到  &lt;code&gt;Waline&lt;/code&gt;  之后数值却从 &lt;span class=&#34;katex&#34;&gt;&lt;span class=&#34;katex-mathml&#34;&gt;&lt;math xmlns=&#34;http://www.w3.org/1998/Math/MathML&#34;&gt;&lt;semantics&gt;&lt;mrow&gt;&lt;mn&gt;0&lt;/mn&gt;&lt;/mrow&gt;&lt;annotation encoding=&#34;application/x-tex&#34;&gt;0&lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;span class=&#34;katex-html&#34; aria-hidden=&#34;true&#34;&gt;&lt;span class=&#34;base&#34;&gt;&lt;span class=&#34;strut&#34; style=&#34;height:0.6444em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;0&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; 开始计算了。在  &lt;code&gt;LeanCloud&lt;/code&gt;  后台，也发现和原来的文章不算同一个数据列。经过一番排查没有找到很好的解决办法，因此只能把之前的计数值复制到新的数据项之中，因为文章数量不多，操作起来倒也没费太多时间。&lt;/p&gt;
&lt;h2 id=&#34;评论&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#评论&#34;&gt;#&lt;/a&gt; 评论&lt;/h2&gt;
&lt;p&gt;在  &lt;code&gt;Vercel&lt;/code&gt;  搭建好之后，进入  &lt;code&gt;Waline&lt;/code&gt;  的管理平台，发现虽然评论能够正常读取，但是评论的时间显示却存在问题，经排查， &lt;code&gt;Waline&lt;/code&gt;  使用的是  &lt;code&gt;insertedAt&lt;/code&gt;  列的数据作为评论的发表时间，而之前的数据则是直接使用的  &lt;code&gt;createdAt&lt;/code&gt;  列的数据，因此  &lt;code&gt;Waline&lt;/code&gt;  读取不到之前评论的发表时间，这里把  &lt;code&gt;createdAt&lt;/code&gt;  列的内容复制到  &lt;code&gt;insertedAt&lt;/code&gt;  列之后可以正常显示时间了。&lt;/p&gt;
&lt;p&gt;另一个问题是在文章的底部没有显示对应的评论，经排查，是因为之前的评论系统使用的路径是  &lt;code&gt;A/B/&lt;/code&gt;  这样的格式，而  &lt;code&gt;Waline&lt;/code&gt;  使用的是  &lt;code&gt;/A/B&lt;/code&gt;  的格式，相差了一个  &lt;code&gt;/&lt;/code&gt;  符号，修正过后，评论能够在文章底部正常显示。&lt;/p&gt;
&lt;h1 id=&#34;网站访问量&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#网站访问量&#34;&gt;#&lt;/a&gt; 网站访问量&lt;/h1&gt;
&lt;p&gt;网站的访客数量统计使用的是 “不蒜子”，但是其无法进行初始化，因此已经搭建好一段时间的网站的数值便不准确，这里参考&lt;a href=&#34;https://juejin.cn/post/7035570281414393864&#34;&gt;这篇文章&lt;/a&gt;的办法，在主题文件中修改  &lt;code&gt;card_webinfo.pug&lt;/code&gt;  文件，在其中添加以下内容：&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;    script.
        function checkPv()&amp;#123; 
            var init_pv = parseInt(!&amp;#123;theme.busuanzi.init_pv&amp;#125;)
            var pv = document.getElementById(&amp;quot;busuanzi_value_site_pv&amp;quot;)
            if (pv.innerText === &#39;&#39;)&amp;#123;
            setTimeout(checkPv, 100)
            &amp;#125; else &amp;#123;
                pv.innerText = parseInt(pv.innerText) + init_pv
            &amp;#125;
        &amp;#125;
    script checkPv()

    script.
        function checkUv()&amp;#123; 
            var init_uv = parseInt(!&amp;#123;theme.busuanzi.init_uv&amp;#125;)
            var uv = document.getElementById(&amp;quot;busuanzi_value_site_uv&amp;quot;)
            if (uv.innerText === &#39;&#39;)&amp;#123;
            setTimeout(checkUv, 100)
            &amp;#125;else&amp;#123;
                uv.innerText = parseInt(uv.innerText) + init_uv
            &amp;#125;
        &amp;#125;
    script checkUv()
&lt;/code&gt;&lt;/pre&gt;
&lt;h1 id=&#34;在-shoka-中使用-waline&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#在-shoka-中使用-waline&#34;&gt;#&lt;/a&gt; 在 Shoka 中使用 Waline&lt;/h1&gt;
&lt;p&gt;如文章开头所述，使用了一个小姐姐提供的方法&lt;sup class=&#34;footnote-ref&#34;&gt;&lt;a href=&#34;#fn1&#34; id=&#34;fnref1:1&#34;&gt;[1:1]&lt;/a&gt;&lt;/sup&gt;，成功将评论系统更换为了  &lt;code&gt;Waline&lt;/code&gt; 。虽然如此，但是还存在一些问题。&lt;/p&gt;
&lt;p&gt;首先是和  &lt;code&gt;MiniValine&lt;/code&gt;  的冲突问题，原来博客中的最近评论和文章浏览量统计是通过  &lt;code&gt;MiniValine&lt;/code&gt;  的功能实现的，更换为  &lt;code&gt;Waline&lt;/code&gt;  之后便失效了。虽然  &lt;code&gt;Waline&lt;/code&gt;  也有提供这些功能，但是由于本人对于前端实在是苦手，因此最后也只是解决了最近评论的问题。文章浏览量统计在很多时候还是不能正常显示，只有通过刷新网页才能够正常显示，最后还是妥协成现在这个状况了。&lt;/p&gt;
&lt;h2 id=&#34;最近评论问题&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#最近评论问题&#34;&gt;#&lt;/a&gt; 最近评论问题&lt;/h2&gt;
&lt;p&gt;对于最近评论，我采用的办法是在网页 DOM 结构树生成完成之后，通过  &lt;code&gt;Waline&lt;/code&gt;  的 API 接口进行查询，然后输出到网页中。这里的代码参考的是刚才提到的小姐姐的  &lt;code&gt;GitHub&lt;/code&gt;  中的相关文件&lt;sup class=&#34;footnote-ref&#34;&gt;&lt;a href=&#34;#fn6&#34; id=&#34;fnref6&#34;&gt;[6]&lt;/a&gt;&lt;/sup&gt;。&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;const getRecentComments = function () &amp;#123;
  console.log(&amp;quot;getRecentComments triggered.&amp;quot;)
  if (CONFIG.waline.serverURL) &amp;#123;
    var t = document.querySelector(&amp;quot;.waline-recent-comments&amp;quot;);
    function renderTime(date) &amp;#123;
        let myDate = new Date(date).toJSON();
        return new Date(+new Date(myDate) + 8 * 3600 * 1000).toISOString().replace(/T/g, &#39; &#39;).replace(/\.[\d]&amp;#123;3&amp;#125;Z/, &#39;&#39;)
    &amp;#125;
    function formatTime(time) &amp;#123;
        let d = Math.floor(time / (1000 * 60 * 60 * 24));
        let h = Math.floor(time / (1000 * 60 * 60) % 24);
        let m = Math.floor(time / (1000 * 60) % 60);
        let s = Math.floor(time / 1000 % 60);
        if (d &amp;gt; 0) &amp;#123;
            return d + &#39; 天前&#39;
        &amp;#125; else if (h &amp;gt; 0) &amp;#123;
            return h + &#39; 小时前&#39;
        &amp;#125; else if (m &amp;gt; 0) &amp;#123;
            return m + &#39; 分钟前&#39;
        &amp;#125; else if (s &amp;gt; 0) &amp;#123;
            return s + &#39; 秒钟前&#39;
        &amp;#125;

    &amp;#125;
    let str = &#39; @ &#39;
    let reg = /&amp;lt;.*?&amp;gt;/ig;
    let date = new Date();
    let url = CONFIG.waline.serverURL;
    let count = 10;
    var t = document.querySelector(&amp;quot;.waline-recent-comments&amp;quot;);
    if (t &amp;amp;&amp;amp; !t.classList.contains(&amp;quot;loaded&amp;quot;)) &amp;#123;
      console.log(&amp;quot;load recent comments&amp;quot;);
      fetch(url+&#39;/comment?type=recent&amp;amp;count=&#39;+count)
        .then(response =&amp;gt; response.json())
        .then(data =&amp;gt; &amp;#123;
            let arr = data.filter(item =&amp;gt; item.pid !== undefined);
            let i = arr.length;
            console.log(&amp;quot;total &amp;quot; + i + &amp;quot; comments&amp;quot;);
            for (var r = &amp;quot;&amp;quot;, o = 0; o &amp;lt; i; o++) &amp;#123;
                let comment = arr[o].comment.replace(reg, &#39;&#39;);
                let gap = formatTime(date - new Date(renderTime(arr[o].createdAt)))
                r += `&amp;lt;li class=&amp;quot;item&amp;quot;&amp;gt;&amp;lt;a href=&amp;quot;$&amp;#123;arr[o].url + &#39;#&#39; + arr[o].objectId&amp;#125;&amp;quot;&amp;gt;
                    &amp;lt;span class=&amp;quot;breadcrumb&amp;quot;&amp;gt;$&amp;#123;arr[o].nick + str + gap&amp;#125;&amp;lt;/span&amp;gt;
                    &amp;lt;span&amp;gt;$&amp;#123;comment&amp;#125;&amp;lt;/span&amp;gt;&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;`;
                t.innerHTML = r;
                t.classList.add(&amp;quot;loaded&amp;quot;); 
                // e.config.pjax &amp;amp;&amp;amp; e.config.pjax.refresh(t)
            &amp;#125;
        &amp;#125;).catch(console.error)
      &amp;#125;
  &amp;#125;
&amp;#125;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;上述内容我添加在  &lt;code&gt;source/js/_app/pjax.js&lt;/code&gt;  文件中，直接添加在最底部即可。上述函数添加后，再添加一个事件监听器：&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;window.addEventListener(&#39;DOMContentLoaded&#39;, getRecentComments);
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;该监听器表示在 DOM 资源生成完毕之后，执行该函数进行查询。&lt;/p&gt;
&lt;h2 id=&#34;文章浏览量统计&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#文章浏览量统计&#34;&gt;#&lt;/a&gt; 文章浏览量统计&lt;/h2&gt;
&lt;p&gt;文章浏览量统计和最近评论的解决思路类似，也是在 DOM 结构树生成完毕之后，进行查询。&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;const getPageView = function () &amp;#123;
  console.log(&amp;quot;getPageView triggered.&amp;quot;);
  if (CONFIG.waline.serverURL) &amp;#123;
    var t = document.querySelector(&amp;quot;.leancloud-visitors-count&amp;quot;);
    let path = window.location.pathname;
    let url = CONFIG.waline.serverURL;
    if (t) &amp;#123;
      console.log(&amp;quot;Load page views&amp;quot;);
      console.log(&amp;quot;Current page path: &amp;quot; + path);
      let https = url+&#39;/article?path=&#39;+path;
      fetch(https)
        .then(response =&amp;gt; response.json())
        .then(data =&amp;gt; &amp;#123;
          console.log(&amp;quot;Pageview: &amp;quot; + data);
          t.innerHTML = data;
        &amp;#125;).catch(console.error);
    &amp;#125;
  &amp;#125;
&amp;#125;

window.addEventListener(&#39;DOMContentLoaded&#39;, getPageView);
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;除此之外，还需要修改  &lt;code&gt;layout/_partials/post/footer.njk&lt;/code&gt;  这一文件中的内容。首先把  &lt;code&gt;if theme.valine.appId and theme.valine.appKey and theme.valine.visitor&lt;/code&gt;  这一语句修改成  &lt;code&gt;if theme.waline.serverURL&lt;/code&gt; ，否则在没有  &lt;code&gt;Valine&lt;/code&gt;  配置的情况下，文章浏览量的元素不会显示。然后把  &lt;code&gt;&amp;lt;span id=&amp;quot;&amp;#123;&amp;#123; page.path | replace(&#39;index.html&#39;, &#39;&#39;) &amp;#125;&amp;#125;&amp;quot;...&amp;quot;&amp;gt;&lt;/code&gt;  这个标签中的内容修改掉，比如我修改成了  &lt;code&gt;&amp;lt;span class=&amp;quot;item&amp;quot;&amp;gt;&lt;/code&gt; 。这里之所以把  &lt;code&gt;&amp;lt;span&amp;gt;&lt;/code&gt;  标签中的内容修改掉是因为我发现如果保留该标签，该数值一直是 &lt;span class=&#34;katex&#34;&gt;&lt;span class=&#34;katex-mathml&#34;&gt;&lt;math xmlns=&#34;http://www.w3.org/1998/Math/MathML&#34;&gt;&lt;semantics&gt;&lt;mrow&gt;&lt;mn&gt;0&lt;/mn&gt;&lt;/mrow&gt;&lt;annotation encoding=&#34;application/x-tex&#34;&gt;0&lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;span class=&#34;katex-html&#34; aria-hidden=&#34;true&#34;&gt;&lt;span class=&#34;base&#34;&gt;&lt;span class=&#34;strut&#34; style=&#34;height:0.6444em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;0&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;，应该是会被某个脚本执行的内容覆盖掉。具体原理还不明确。&lt;/p&gt;
&lt;p&gt;但是这个方法存在的问题是，除非刷新网页，否则浏览数据不会正常显示。&lt;/p&gt;
&lt;p&gt;尽管花了很多时间尝试别的方法，但是最后还是没有彻底解决。如果有哪位前端大佬能够不吝赐教，感激不尽。&lt;/p&gt;
&lt;h2 id=&#34;评论系统样式问题&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#评论系统样式问题&#34;&gt;#&lt;/a&gt; 评论系统样式问题&lt;/h2&gt;
&lt;p&gt;由于  &lt;code&gt;Waline&lt;/code&gt;  系统的默认样式和  &lt;code&gt;Shoka&lt;/code&gt;  不是非常搭配，因此仍然参考小姐姐的教程&lt;sup class=&#34;footnote-ref&#34;&gt;&lt;a href=&#34;#fn1&#34; id=&#34;fnref1:2&#34;&gt;[1:2]&lt;/a&gt;&lt;/sup&gt;进行了配置，但是发现并没有生效。经过排查是因为原来主题中存在的  &lt;code&gt;MiniValine&lt;/code&gt;  相关的样式覆盖了配置的样式。最好把相关的  &lt;code&gt;MiniValine&lt;/code&gt;  的内容全部注释掉。&lt;/p&gt;
&lt;h1 id=&#34;终&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#终&#34;&gt;#&lt;/a&gt; 终&lt;/h1&gt;
&lt;p&gt;花了几天总算是把博客主题折腾好了。虽然花了不少功夫，&lt;s&gt;还额外给网页增加了几十次浏览量。&lt;/s&gt; 还有些问题没有完全解决，但是能够保住这个主题还是很高兴的。&lt;s&gt;只要能保住太原，他要多少我给多少！&lt;/s&gt;&lt;/p&gt;
&lt;hr class=&#34;footnotes-sep&#34; /&gt;
&lt;section class=&#34;footnotes&#34;&gt;
&lt;ol class=&#34;footnotes-list&#34;&gt;
&lt;li id=&#34;fn1&#34; class=&#34;footnote-item&#34;&gt;&lt;p&gt;&lt;a href=&#34;https://ry.mk/2022/03/06/zai-shoka-zhong-tian-zeng-waline-ping-lun-xi-tong-bing-zi-ding-yi-yang-shi&#34;&gt;在 Shoka 中添增 Waline 评论系统并自定义样式&lt;/a&gt; &lt;a href=&#34;#fnref1&#34; class=&#34;footnote-backref&#34;&gt;↩︎&lt;/a&gt; &lt;a href=&#34;#fnref1:1&#34; class=&#34;footnote-backref&#34;&gt;↩︎&lt;/a&gt; &lt;a href=&#34;#fnref1:2&#34; class=&#34;footnote-backref&#34;&gt;↩︎&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id=&#34;fn2&#34; class=&#34;footnote-item&#34;&gt;&lt;p&gt;&lt;a href=&#34;https://oldtang.com/2420.html#%E4%B8%89%E3%80%81%E5%90%8E%E5%8F%B0%E7%AE%A1%E7%90%86%E5%B9%B6%E8%A7%A3%E6%9E%90%E5%9F%9F%E5%90%8D&#34;&gt;Dynadot 网站注册账户、购买域名、支付宝付款、解析域名教程&lt;/a&gt; &lt;a href=&#34;#fnref2&#34; class=&#34;footnote-backref&#34;&gt;↩︎&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id=&#34;fn3&#34; class=&#34;footnote-item&#34;&gt;&lt;p&gt;&lt;a href=&#34;https://www.bandwagonhost.net/5986.html&#34;&gt;使用 Cloudflare 免费 DNS 服务器解析域名到搬瓦工 VPS 主机建站教程&lt;/a&gt; &lt;a href=&#34;#fnref3&#34; class=&#34;footnote-backref&#34;&gt;↩︎&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id=&#34;fn4&#34; class=&#34;footnote-item&#34;&gt;&lt;p&gt;&lt;a href=&#34;https://github.com/walinejs/waline/discussions/1098&#34;&gt;Vercel 重新部署后 Serverless Function has crashed&lt;/a&gt; &lt;a href=&#34;#fnref4&#34; class=&#34;footnote-backref&#34;&gt;↩︎&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id=&#34;fn5&#34; class=&#34;footnote-item&#34;&gt;&lt;p&gt;&lt;a href=&#34;https://github.com/walinejs/waline/issues/480&#34;&gt;[BUG] 配置邮件通知成功后，无法定位到评论所在的具体文章&lt;/a&gt; &lt;a href=&#34;#fnref5&#34; class=&#34;footnote-backref&#34;&gt;↩︎&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id=&#34;fn6&#34; class=&#34;footnote-item&#34;&gt;&lt;p&gt;&lt;a href=&#34;https://github.com/WakabaYu/WakabaYu.github.io/blob/master/js/rcomment.js&#34;&gt;最近评论获取&lt;/a&gt; &lt;a href=&#34;#fnref6&#34; class=&#34;footnote-backref&#34;&gt;↩︎&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/section&gt;
 ]]></description>
        </item>
    </channel>
</rss>
