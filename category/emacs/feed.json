{
    "version": "https://jsonfeed.org/version/1",
    "title": "林•初夏 • All posts by \"emacs\" category",
    "description": "Linn 的个人博客",
    "home_page_url": "https://linn-ylz.com",
    "items": [
        {
            "id": "https://linn-ylz.com/Computer-Science/Emacs/emacs-learning-4/",
            "url": "https://linn-ylz.com/Computer-Science/Emacs/emacs-learning-4/",
            "title": "Emacs 学习（四）Emacs 详细配置",
            "date_published": "2022-01-17T09:34:55.000Z",
            "content_html": "<h1 id=\"前言\"><a class=\"anchor\" href=\"#前言\">#</a> 前言</h1>\n<p>我个人主要使用的操作系统是  <code>Windows</code> ，所以我希望在这个环境下配置好  <code>Emacs</code> ，这里就有两个选择，一个是原生的  <code>Windows</code>  下的  <code>Emacs</code>  应用程序；另一种选择是  <code>Linux</code>  子系统下安装  <code>Emacs</code> ，因为现在  <code>Linux</code>  子系统也支持图形界面应用了，所以直接安装使用也非常方便。但是在实际配置的过程中间遇到了许多的问题，只能说各有优缺点，这里我最终还是选择了使用  <code>Windows</code>  下的原生  <code>Emacs</code>  程序。</p>\n<h2 id=\"linux-子系统\"><a class=\"anchor\" href=\"#linux-子系统\">#</a>  <code>Linux</code>  子系统</h2>\n<p>子系统下无论是安装  <code>Emacs</code>  还是设置其他配置都非常方便，基本和原生的  <code>Linux</code>  系统没有太大差别。但是一个比较大的问题就是对中文的支持并不好。在期间试过  <code>cnfonts</code>  插件<sup class=\"footnote-ref\"><a href=\"#fn1\" id=\"fnref1\">[1]</a></sup>，但是中文仍然显示乱码。</p>\n<p>一开始我尝试通过在终端中而不是  <code>GUI</code>  界面使用  <code>Emacs</code> ，发现中文字体已经显示正常了。 <code>Emacs</code>  通过  <code>emacs -nw</code>  指令运行，可以进入非  <code>GUI</code>  的界面。本来到这里应该就能够结束了，但是后来发现部分快捷键在终端模式下失效，搜索一番后发现，原来是终端无法识别部分按键的模式，具体原因可以查看<a href=\"https://emacs.stackexchange.com/questions/1020/problems-with-keybindings-when-using-terminal\">这个回答</a><sup class=\"footnote-ref\"><a href=\"#fn2\" id=\"fnref2\">[2]</a></sup>。</p>\n<p>如此一来，只能尝试解决  <code>GUI</code>  界面的显示问题。后来经过搜索，发现是  <code>Linux</code>  子系统中无法直接找到  <code>Windows</code>  系统中的字体。 <code>Linux</code>  子系统中的字体可以通过  <code>fc-list</code>  指令查看，我发现其中并没有列举出中文相关字体，这也难怪中文显示会乱码了。</p>\n<p>在我的系统中，字体文件存储在  <code>/usr/share/fonts</code>  下，为了导入  <code>Windows</code>  下的字体，我使用下面的指令建立了一个软链接指向  <code>Windows</code>  系统下存放字体文件的文件夹：</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token builtin class-name\">cd</span> /usr/share/fonts</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token function\">ln</span> <span class=\"token parameter variable\">-s</span> /mnt/c/Windows/Fonts ./windows</pre></td></tr></table></figure><p>之后再使用  <code>fc-cache</code>  命令让系统识别新加入的字体，现在使用  <code>fc-list</code>  再查看字体就能够发现中文字体了。在  <code>GUI</code>  界面中使用  <code>cnfonts</code>  也能正常配置字体了。</p>\n<p>但是此时其他问题又困扰了我，在  <code>GUI</code>  界面中，无法调用  <code>Windows</code>  系统的输入法，而  <code>Emacs</code>  系统自己的中文输入法使用体验又非常糟糕。除此之外更重要的问题就是在我每次打开  <code>Emacs</code>  时，编辑界面会不断写入  <code>n</code>  字符，如果我不进行任何操作，便会一直输入，这在编辑文件时非常让人恼火，总不能每次打开  <code>Emacs</code>  还要先删除一遍多出来的这些  <code>n</code>  字符吧。于是我最终在一番折腾之后，还是尝试使用  <code>Windows</code>  原生程序进行配置了。</p>\n<h2 id=\"windows-原生程序\"><a class=\"anchor\" href=\"#windows-原生程序\">#</a>  <code>Windows</code>  原生程序</h2>\n<p>相比于  <code>Linux</code>  子系统下的  <code>Emacs</code>  程序， <code>Windows</code>  原生的  <code>Emacs</code>  程序对于中文的支持要好得多，系统的输入法也能够直接调用，这方面的配置可以直接省略。在此之外， <code>Windows</code>  安装一些配置的时候可能会要稍微麻烦一些，因为  <code>Windows</code>  下的  <code>Emacs</code>  程序会在  <code>C:\\Users\\YourUserName\\AppData\\Roaming</code>  路径下建立  <code>.emacs.d</code>  文件夹作为配置文件的存放位置。因此这里参考了别人的做法，在其中的  <code>init.el</code>  文件中写入了以下内容让其读取对应路径下的配置：</p>\n<figure class=\"highlight lisp\"><figcaption data-lang=\"lisp\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">(</span><span class=\"token car\">setenv</span> <span class=\"token string\">\"HOME\"</span> <span class=\"token string\">\"D:/Programs/Emacs\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">(</span><span class=\"token car\">setenv</span> <span class=\"token string\">\"PATH\"</span> <span class=\"token string\">\"D:/Programs/Emacs\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\">;;set the default file path</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token punctuation\">(</span><span class=\"token keyword\">setq</span> default-directory <span class=\"token string\">\"D:/Programs/Emacs\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token punctuation\">(</span><span class=\"token car\">load-file</span> <span class=\"token string\">\"D:/Programs/Emacs/.emacs.d/init.el\"</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p>虽然配置的时候麻烦了一些，但是总的来说还算比较方便，也没有快捷键的问题。</p>\n<h1 id=\"emacs-配置\"><a class=\"anchor\" href=\"#emacs-配置\">#</a> Emacs 配置</h1>\n<p>在之前的文章中推荐过一个  <code>Emacs</code>  配置<sup class=\"footnote-ref\"><a href=\"#fn3\" id=\"fnref3\">[3]</a></sup>，但是这个配置对中文的适配并不友好，而且很多东西确实用不到，所以我又搜索了一些其他的配置。下面算是对这个<s>愉快</s>心酸的配置过程的一个记录。</p>\n<h2 id=\"spacemacs-和-doom-emacs\"><a class=\"anchor\" href=\"#spacemacs-和-doom-emacs\">#</a>  <code>Spacemacs</code>  和  <code>Doom Emacs</code></h2>\n<p>在  <code>GitHub</code>  上可以搜索的许多人提供的  <code>Emacs</code>  配置，目前最热门的应该是  <code>Spacemacs</code> <sup class=\"footnote-ref\"><a href=\"#fn4\" id=\"fnref4\">[4]</a></sup> 和  <code>Doom Emacs</code> <sup class=\"footnote-ref\"><a href=\"#fn5\" id=\"fnref5\">[5]</a></sup>。但是这两个配置都比较庞大，添加的内容很多，而且在安装时因为需要从  <code>GitHub</code>  下载内容，经常安装到一半就因为网络问题出错。</p>\n<p>尤其是  <code>Doom Emacs</code> ，虽然在  <code>Emacs China</code>  有相关教程帖<sup class=\"footnote-ref\"><a href=\"#fn6\" id=\"fnref6\">[6]</a></sup>，但是期间也还是会碰到许多问题。</p>\n<p>主要的一个问题就是  <code>clone</code>   <code>Github</code>  下的  <code>repo</code>  的时候经常无法成功，在配置了以下内容的时候才算是正常安装完成了：</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">git</span> config <span class=\"token parameter variable\">--global</span> url.https://github.com.cnpmjs.org/.insteadof https://github.com/</pre></td></tr></table></figure><p>这个是将  <code>github.com</code>  的域名替换成  <code>github.com.cnpmjs.org</code>  的镜像域名，确实在下载的时候速度要快很多。但是在完成安装之后发现  <code>Emacs</code>  无法正常读取  <code>Doom Emacs</code>  的配置，我个人估计应该是路径问题。但是我之前使用 purcell 的配置又是可以的，估计应该是  <code>Doom Emacs</code>  的配置特殊一点。</p>\n<p>于是我只能再尝试其他的配置了。</p>\n<h2 id=\"centaur-emacs\"><a class=\"anchor\" href=\"#centaur-emacs\">#</a>  <code>Centaur Emacs</code></h2>\n<p>最终我选择了  <code>Centaur Emacs</code> ，尽管没有  <code>Spacemacs</code>  和  <code>Doom Emacs</code>  那么流行，但是目前也有 1.5k 的 Star，而且作者应该是中国人，对中文的支持也更好。安装非常简单，使用：</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">git</span> clone <span class=\"token parameter variable\">--depth</span> <span class=\"token number\">1</span> https://github.com/seagle0128/.emacs.d.git ~/.emacs.d</pre></td></tr></table></figure><p>将  <code>repo</code>   <code>clone</code>  下来之后即可使用。在第一次启动的时候，会下载安装一些插件，因此会比较慢一些。在安装过程中，可能会报出一些错误，如果是  <code>package</code>  找不到的错误，那么安装即可。我这里记录一些其他的错误，读者也可以参考其他的文章<sup class=\"footnote-ref\"><a href=\"#fn7\" id=\"fnref7\">[7]</a></sup>。</p>\n<h3 id=\"图标及字体下载\"><a class=\"anchor\" href=\"#图标及字体下载\">#</a> 图标及字体下载</h3>\n<p><code>Centaur Emacs</code>  使用到了一些图标，因此需要安装相应的字体才能够显示，使用  <code>M-x all-the-icons-install-fonts</code>  能够安装相应的字体。但是这个指令是访问  <code>raw.githubusercontent.com</code>  这个域名进行下载，因此不使用代理就无法顺利下载。尽管我这里有代理，但是依然无法下载成功，虽然我在浏览器中是能够成功使用代理的，不知道是哪里没有配置对。一番搜索之后发现只要在网页中下载，然后将字体安装到系统中即可。其他问题可以参考  <code>GitHub</code>  仓库下的  <code>issue</code> 。</p>\n<p>将  <code>https://github.com/domtronn/all-the-icons.el</code> <sup class=\"footnote-ref\"><a href=\"#fn8\" id=\"fnref8\">[8]</a></sup> 这个  <code>repo</code>  中的  <code>fonts</code>  文件夹下的字体安装好即可顺利显示图标。</p>\n<p><s>不过有个图标还是显示异常，所以最终我还是决定关掉这个图标，在  <code>custom.el</code>  中将  <code>(setq centaur-icon nil)</code>  的注释去掉即可。</s></p>\n<p>经过一番查找，最终发现应该是  <code>Unicode</code>  字符显示异常，在  <code>custom.el</code>  中字体设置相关的语句中，将  <code>(cl-loop for font in '(&quot;Symbola&quot; &quot;Apple Color Emoji&quot; &quot;Segoe UI Symbol&quot; &quot;Symbol&quot;)</code>  中的字体顺序调整成了现在的这个顺序，默认优先使用  <code>Symbola</code>  字体，现在显示已经正常。</p>\n<h3 id=\"dashboard-不显示信息\"><a class=\"anchor\" href=\"#dashboard-不显示信息\">#</a> Dashboard 不显示信息</h3>\n<p>在  <code>repo</code>  下的 issue<sup class=\"footnote-ref\"><a href=\"#fn9\" id=\"fnref9\">[9]</a></sup> 中找到了相同的问题，解决方法是将  <code>.emacs.d</code>  下的  <code>elpa</code>  文件夹删除，然后重新打开  <code>Emacs</code>  重新安装即可。</p>\n<h3 id=\"org-mode-显示效果修改\"><a class=\"anchor\" href=\"#org-mode-显示效果修改\">#</a> org-mode 显示效果修改</h3>\n<p>我个人主要使用  <code>Emacs</code>  的  <code>org-mode</code> ，发现对于字体显示效果，配置会将  <code>*</code> ， <code>+</code>  等特殊字体效果的标记符号给隐藏，这和我的习惯不同，在  <code>list\\init-org.el</code>  配置文件中修改 <code>org-hide-emphasis-markers</code>  为  <code>nil</code> 。</p>\n<p>尽管如此，汉字斜体无法显示出倾斜的效果，这个应该是因为汉字字体没有真正的斜体字体，而是通过其他方式得到倾斜的效果，而  <code>Emacs</code>  是直接读取倾斜字体来显示倾斜效果的，对于没有倾斜字体的英文字体也无法显示出倾斜效果，因此这里就不折腾中文的显示效果了，可以用下划线或者其他方式体现强调的效果。</p>\n<h2 id=\"总结\"><a class=\"anchor\" href=\"#总结\">#</a> 总结</h2>\n<p>尽管  <code>Emacs</code>  配置还是花费了很多时间，但也算是有了一些收获，对  <code>Emacs</code>  的配置也稍微有了些了解。在  <code>Doom Emacs</code>  的安装过程中，还发现了  <code>Scoop</code>  这款  <code>Windows</code>  下的包管理器，能够安装  <code>gcc</code>  是确实有些出乎我预料之外的，以后可以试着用  <code>Scoop</code>  来让  <code>Powerline</code>  下的命令和  <code>Linux</code>  终端更趋近一致，这样就不用再因为终端不同而要搜索不同命令了。</p>\n<hr class=\"footnotes-sep\" />\n<section class=\"footnotes\">\n<ol class=\"footnotes-list\">\n<li id=\"fn1\" class=\"footnote-item\"><p><a href=\"https://github.com/tumashu/cnfonts\"> <code>cnfonts</code>  插件</a> <a href=\"#fnref1\" class=\"footnote-backref\">↩︎</a></p>\n</li>\n<li id=\"fn2\" class=\"footnote-item\"><p><a href=\"https://emacs.stackexchange.com/questions/1020/problems-with-keybindings-when-using-terminal\">终端下  <code>Emacs</code>  快捷键失效</a> <a href=\"#fnref2\" class=\"footnote-backref\">↩︎</a></p>\n</li>\n<li id=\"fn3\" class=\"footnote-item\"><p><a href=\"https://github.com/purcell/emacs.d\"> <code>Emacs</code>  配置推荐</a> <a href=\"#fnref3\" class=\"footnote-backref\">↩︎</a></p>\n</li>\n<li id=\"fn4\" class=\"footnote-item\"><p><a href=\"https://github.com/syl20bnr/spacemacs\">Spacemacs</a> <a href=\"#fnref4\" class=\"footnote-backref\">↩︎</a></p>\n</li>\n<li id=\"fn5\" class=\"footnote-item\"><p><a href=\"https://github.com/hlissner/doom-emacs\">Doom Emacs</a> <a href=\"#fnref5\" class=\"footnote-backref\">↩︎</a></p>\n</li>\n<li id=\"fn6\" class=\"footnote-item\"><p><a href=\"https://emacs-china.org/t/emacs-windows10-emacs-11/14335\">零秒精通 Emacs 之 Windows10 上畅行无碍地使用 emacs 的 11 步骤</a> <a href=\"#fnref6\" class=\"footnote-backref\">↩︎</a></p>\n</li>\n<li id=\"fn7\" class=\"footnote-item\"><p><a href=\"https://www.5axxw.com/wiki/content/ipt6q1\">CentaurEmacs - 一个奇特而快速的 Emacs 配置</a> <a href=\"#fnref7\" class=\"footnote-backref\">↩︎</a></p>\n</li>\n<li id=\"fn8\" class=\"footnote-item\"><p><a href=\"https://github.com/domtronn/all-the-icons.el\">All The Icons</a> <a href=\"#fnref8\" class=\"footnote-backref\">↩︎</a></p>\n</li>\n<li id=\"fn9\" class=\"footnote-item\"><p><a href=\"https://github.com/seagle0128/doom-modeline/issues/321\">Doom-modeline not displaying anything except window number</a> <a href=\"#fnref9\" class=\"footnote-backref\">↩︎</a></p>\n</li>\n</ol>\n</section>\n",
            "tags": [
                "Computer-Science",
                "Emacs"
            ]
        },
        {
            "id": "https://linn-ylz.com/Computer-Science/Emacs/emacs-learning-3/",
            "url": "https://linn-ylz.com/Computer-Science/Emacs/emacs-learning-3/",
            "title": "Emacs 学习（三）Org-mode 学习",
            "date_published": "2022-01-17T07:30:38.000Z",
            "content_html": "<h1 id=\"何为-org-mode\"><a class=\"anchor\" href=\"#何为-org-mode\">#</a> 何为  <code>Org-mode</code></h1>\n<p><code>Org-mode</code>  是  <code>Emacs</code>  的一种 Mode，主要的应用场景有笔记管理、任务计划、项目管理等日常工作场景。我主要计划用它做笔记管理和任务计划，笔记管理后续可以结合  <code>Org-roam</code>  打造一个双链的个人知识库。</p>\n<h1 id=\"语法\"><a class=\"anchor\" href=\"#语法\">#</a> 语法</h1>\n<p>这里简单记录一些较常用的语法及相关快捷键。这一部分参考了一些博客。<sup class=\"footnote-ref\"><a href=\"#fn1\" id=\"fnref1\">[1]</a></sup></p>\n<h2 id=\"标题\"><a class=\"anchor\" href=\"#标题\">#</a> 标题</h2>\n<figure class=\"highlight markdown\"><figcaption data-lang=\"markdown\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token title important\"><span class=\"token punctuation\">#</span>+TITLE: emacs org-mode 的使用</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token list punctuation\">*</span> 这是一个一级标题</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token bold\"><span class=\"token punctuation\">**</span><span class=\"token content\"> 这是一个二级标题</pre></td></tr><tr><td data-num=\"4\"></td><td><pre></span><span class=\"token punctuation\">**</span></span>* 以此类推（最多10个*）</pre></td></tr></table></figure><div class=\"note warning\">\n<p>注意：  <code>*</code>  要位于行首； <code>*</code>  后面要有一个空格。</p>\n</div>\n<p>每个标题可以看作一个大纲。</p>\n<h3 id=\"常用快捷键\"><a class=\"anchor\" href=\"#常用快捷键\">#</a> 常用快捷键</h3>\n<h4 id=\"大纲折叠\"><a class=\"anchor\" href=\"#大纲折叠\">#</a> 大纲折叠</h4>\n<table>\n<caption id=\"\" style=\"caption-side: bottom\">大纲折叠</caption>\n<thead>\n<tr>\n<th>快捷键</th>\n<th>功能</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><span class=\"kbd red\">S-TAB</span></td>\n<td>循环切换整个文档的大纲状态（三种状态：折叠，打开下一级，打开全部）</td>\n</tr>\n<tr>\n<td><span class=\"kbd red\">TAB</span></td>\n<td>循环切换光标所在大纲的状态 （三种状态：折叠，打开下一级，打开全部）</td>\n</tr>\n</tbody>\n</table>\n<h4 id=\"在大纲间移动\"><a class=\"anchor\" href=\"#在大纲间移动\">#</a> 在大纲间移动</h4>\n<table>\n<caption id=\"\" style=\"caption-side: bottom\">大纲间移动</caption>\n<thead>\n<tr>\n<th>快捷键</th>\n<th>功能</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><span class=\"kbd red\">C-c C-n/p</span></td>\n<td>下 / 上一标题</td>\n</tr>\n<tr>\n<td><span class=\"kbd red\">C-c C-f/b</span></td>\n<td>下 / 上一标题（仅限同级标题）</td>\n</tr>\n<tr>\n<td><span class=\"kbd red\">C-c C-u</span></td>\n<td>跳到上一级标题</td>\n</tr>\n<tr>\n<td><span class=\"kbd red\">C-c C-j</span></td>\n<td>切换到大纲浏览状态</td>\n</tr>\n</tbody>\n</table>\n<h4 id=\"基于大纲的编辑\"><a class=\"anchor\" href=\"#基于大纲的编辑\">#</a> 基于大纲的编辑</h4>\n<table>\n<caption id=\"\" style=\"caption-side: bottom\">基于大纲的编辑</caption>\n<thead>\n<tr>\n<th>快捷键</th>\n<th>功能</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><span class=\"kbd red\">M-RET</span></td>\n<td>插入一个同级标题</td>\n</tr>\n<tr>\n<td><span class=\"kbd red\">M-S-RET</span></td>\n<td>插入一个同级 TODO 标题</td>\n</tr>\n<tr>\n<td><span class=\"kbd red\">M-LEFT/RIGHT</span></td>\n<td>将当前标题升 / 降级</td>\n</tr>\n<tr>\n<td><span class=\"kbd red\">M-S-LEFT/RIGHT</span></td>\n<td>将子树升 / 降级</td>\n</tr>\n<tr>\n<td><span class=\"kbd red\">M-S-UP/DOWN</span></td>\n<td>将子树上 / 下移</td>\n</tr>\n<tr>\n<td><span class=\"kbd red\">C-c *</span></td>\n<td>将本行设为标题 / 正文</td>\n</tr>\n<tr>\n<td><span class=\"kbd red\">C-c C-w</span></td>\n<td>将子树或区域移动到另一标题处（跨缓冲区）</td>\n</tr>\n<tr>\n<td><span class=\"kbd red\">C-x n s/w</span></td>\n<td>只显示当前子树 / 返回</td>\n</tr>\n<tr>\n<td><span class=\"kbd red\">C-c C-x b</span></td>\n<td>在新缓冲区显示当前分支（类似 C-x n s)</td>\n</tr>\n<tr>\n<td><span class=\"kbd red\">C-c /</span></td>\n<td>只列出包含搜索结果的大纲，并高亮，支持多种搜索方式</td>\n</tr>\n<tr>\n<td><span class=\"kbd red\">C-c C-c</span></td>\n<td>取消高亮</td>\n</tr>\n</tbody>\n</table>\n<h4 id=\"大纲的显示格式\"><a class=\"anchor\" href=\"#大纲的显示格式\">#</a> 大纲的显示格式</h4>\n<p><code>org</code>  的大纲显示模式会对不同级标题采用不同颜色显示，但是默认的大纲显示没有缩进，如果想添加缩进显示，可以用 <span class=\"kbd red\">M-x</span>，输入  <code>org-indent-mode</code> 。如果想让某个文件默认用这种方式打开，可以在文件头部增加：</p>\n<figure class=\"highlight markdown\"><figcaption data-lang=\"markdown\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token title important\"><span class=\"token punctuation\">#</span>+STARTUP: indent</span></pre></td></tr></table></figure><figure class=\"highlight lisp\"><figcaption data-lang=\"lisp\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">(</span><span class=\"token keyword\">setq</span> org-startup-indented <span class=\"token boolean\">t</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h2 id=\"段落\"><a class=\"anchor\" href=\"#段落\">#</a> 段落</h2>\n<p>在  <code>org-mode</code>  中需要两个回车来分隔一个段落，这点和  <code>Markdown</code>  一致。</p>\n<h2 id=\"字体\"><a class=\"anchor\" href=\"#字体\">#</a> 字体</h2>\n<figure class=\"highlight markdown\"><figcaption data-lang=\"markdown\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token italic\"><span class=\"token punctuation\">*</span><span class=\"token content\">粗体</span><span class=\"token punctuation\">*</span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>/斜体/</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>+删除线+</pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token italic\"><span class=\"token punctuation\">_</span><span class=\"token content\">下划线</span><span class=\"token punctuation\">_</span></span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>下标： H_2 O</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>上标： E=mc^2</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>高亮： =git=  或者 ～git～ （在我的终端里显示不同颜色）</pre></td></tr></table></figure><p>这里和  <code>Markdown</code>  有一些差距，有需要的时候查找即可。</p>\n<h2 id=\"列表\"><a class=\"anchor\" href=\"#列表\">#</a> 列表</h2>\n<ul>\n<li>无序列表以  <code>-</code> 、 <code>+</code>  或者  <code>*</code>  开头</li>\n<li>有序列表以  <code>1.</code>  或者  <code>1)</code>  开头</li>\n<li>描述列表用  <code>::</code></li>\n<li>列表层级用缩进体现</li>\n</ul>\n<div class=\"note warning\">\n<p>列表符号后面都要有空格；同级别的列表缩进要相同；空两行之后列表结束；</p>\n</div>\n<p>示例：</p>\n<figure class=\"highlight markdown\"><figcaption data-lang=\"markdown\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token list punctuation\">+</span> treeroot </pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token list punctuation\">+</span> branch1</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token list punctuation\">+</span> branch2</pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token list punctuation\">+</span> treeroot</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    1) branch1</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    2) branch2</pre></td></tr></table></figure><h3 id=\"快捷键\"><a class=\"anchor\" href=\"#快捷键\">#</a> 快捷键</h3>\n<table>\n<caption id=\"\" style=\"caption-side: bottom\">列表相关功能快捷键</caption>\n<thead>\n<tr>\n<th>快捷键</th>\n<th>功能</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><span class=\"kbd red\">TAB</span></td>\n<td>折叠列表项</td>\n</tr>\n<tr>\n<td><span class=\"kbd red\">M-RET</span></td>\n<td>插入项</td>\n</tr>\n<tr>\n<td><span class=\"kbd red\">M-S-RET</span></td>\n<td>插入带复选框的项</td>\n</tr>\n<tr>\n<td><span class=\"kbd red\">M-S-UP/DOWN</span></td>\n<td>移动列表项</td>\n</tr>\n<tr>\n<td><span class=\"kbd red\">M-LEFT/RIGHT</span></td>\n<td>升 / 降级列表项，不包括子项</td>\n</tr>\n<tr>\n<td><span class=\"kbd red\">M-S-LEFT/RIGTH</span></td>\n<td>升 / 降级列表项，包括子项</td>\n</tr>\n<tr>\n<td><span class=\"kbd red\">C-c C-c</span></td>\n<td>改变复选框状态</td>\n</tr>\n<tr>\n<td><span class=\"kbd red\">C-c -</span></td>\n<td>更换列表标记（循环切换）</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"表格\"><a class=\"anchor\" href=\"#表格\">#</a> 表格</h2>\n<p>一个普通表格：</p>\n<figure class=\"highlight markdown\"><figcaption data-lang=\"markdown\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token title important\"><span class=\"token punctuation\">#</span>+CAPTION: 表格的标题</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>| Name     | Height | Weight | Age |</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>|----------+--------+--------+-----|</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>| Abcdefgh |    178 |    123 |  18 |</pre></td></tr></table></figure><p>注意表头和表格内容的分隔线和  <code>Markdown</code>  有略微不同。表头之上可以添加表格的标题（可选）。</p>\n<p>对于内容较多的表格，可以设置每一列显示的长度以及对齐方式：</p>\n<figure class=\"highlight markdown\"><figcaption data-lang=\"markdown\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>| &lt;5>   | <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>l5</span><span class=\"token punctuation\">></span></span>  |  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>r5</span><span class=\"token punctuation\">></span></span> | <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>c5</span><span class=\"token punctuation\">></span></span>  |</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>| Name  | Hei=> | Wei=> | Age   |</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>|-------+-------+-------+-------|</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>| Ab=>  |       |       |       |</pre></td></tr></table></figure><p>可以在任意一个表格的空白项内输入数字来限制其所在列的长度，可以可以通过  <code>l</code> 、 <code>c</code> 、 <code>r</code>  来设置左中右对齐（默认左对齐）。比如（ <code>=&gt;</code>  代表内容隐藏内容，实际为  <code>Abcedfgh</code>  ）</p>\n<table>\n<caption id=\"\" style=\"caption-side: bottom\">表格相关功能快捷键</caption>\n<thead>\n<tr>\n<th>快捷键</th>\n<th>功能</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><span class=\"kbd red\">C-c  <code>|</code> </span></td>\n<td>创建或转换成表格</td>\n</tr>\n<tr>\n<td><span class=\"kbd red\">C-c C-c</span></td>\n<td>调整表格，不移动光标</td>\n</tr>\n<tr>\n<td><span class=\"kbd red\">TAB</span></td>\n<td>移动到下一区域，必要时新建一行</td>\n</tr>\n<tr>\n<td><span class=\"kbd red\">S-TAB</span></td>\n<td>移动到上一区域</td>\n</tr>\n<tr>\n<td><span class=\"kbd red\">RET</span></td>\n<td>移动到下一行，必要时新建一行</td>\n</tr>\n<tr>\n<td><span class=\"kbd red\">M-LEFT/RIGHT</span></td>\n<td>移动列</td>\n</tr>\n<tr>\n<td><span class=\"kbd red\">M-UP/DOWN</span></td>\n<td>移动行</td>\n</tr>\n<tr>\n<td><span class=\"kbd red\">M-S-LEFT/RIGHT</span></td>\n<td>删除 / 插入列</td>\n</tr>\n<tr>\n<td><span class=\"kbd red\">M-S-UP/DOWN</span></td>\n<td>删除 / 插入行</td>\n</tr>\n<tr>\n<td><span class=\"kbd red\">C-c -</span></td>\n<td>添加水平分割线</td>\n</tr>\n<tr>\n<td><span class=\"kbd red\">C-c RET</span></td>\n<td>添加水平分割线并跳到下一行</td>\n</tr>\n<tr>\n<td><span class=\"kbd red\">C-c ^</span></td>\n<td>根据当前列排序，可以选择排序方式</td>\n</tr>\n</tbody>\n</table>\n<p>目前表格不支持拆分和合并，只能使用如下格式替代。(本主题中安装的插件可以支持复杂格式的表格，具体参考插件 <a href=\"https://www.npmjs.com/package/markdown-it-multimd-table\"> <code>markdown-it-multimd-table</code> </a>，或者我之前的博客 <a href=\"/Hexo/blog-content-test/\" title=\"Shoka 主题测试\">Shoka 主题测试</a>)</p>\n<figure class=\"highlight markdown\"><figcaption data-lang=\"markdown\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>| 一级部门 | 二级部门 | 人数 |</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>|----------+----------+------|</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>| A        | A.1      | 5    |</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>|          | A.2      | 6    |</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>|----------+----------+------|</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>| B        | B.1      | 7    |</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>|          | B.2      | 3    |</pre></td></tr></table></figure><h2 id=\"org-roam-配置\"><a class=\"anchor\" href=\"#org-roam-配置\">#</a>  <code>Org-roam</code>  配置</h2>\n<p>在  <code>.emacs.d/lisp/</code>  下创建  <code>init-org-roam.el</code>  文件，并写入以下内容：</p>\n<figure class=\"highlight lisp\"><figcaption data-lang=\"lisp\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">(</span><span class=\"token keyword\">use-package</span> org-roam</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token lisp-property property\">:ensure</span> <span class=\"token boolean\">t</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  <span class=\"token lisp-property property\">:init</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>  <span class=\"token punctuation\">(</span><span class=\"token keyword\">setq</span> org-roam-v2-ack <span class=\"token boolean\">t</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>  <span class=\"token lisp-property property\">:custom</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>  <span class=\"token punctuation\">(</span><span class=\"token car\">make-directory</span> <span class=\"token string\">\"~/org-roam\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>  <span class=\"token punctuation\">(</span><span class=\"token keyword\">setq</span> org-roam-db-gc-threshold most-positive-fixnum<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>  <span class=\"token punctuation\">(</span><span class=\"token keyword\">setq</span> org-roam-directory <span class=\"token string\">\"~/org-roam/\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>  <span class=\"token punctuation\">(</span><span class=\"token keyword\">setq</span> org-roam-completion-everywhere <span class=\"token boolean\">t</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>  <span class=\"token punctuation\">(</span><span class=\"token keyword\">setq</span> org-roam-v2-ack <span class=\"token boolean\">t</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>  <span class=\"token punctuation\">(</span><span class=\"token car\">add-hook</span> <span class=\"token quoted-symbol variable symbol\">'after-init-hook</span> <span class=\"token quoted-symbol variable symbol\">'org-roam-mode</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>  <span class=\"token lisp-property property\">:bind</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"C-c n l\"</span> <span class=\"token punctuation\">.</span> org-roam-buffer-toggle<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>         <span class=\"token punctuation\">(</span><span class=\"token string\">\"C-c n f\"</span> <span class=\"token punctuation\">.</span> org-roam-node-find<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>         <span class=\"token punctuation\">(</span><span class=\"token string\">\"C-c n i\"</span> <span class=\"token punctuation\">.</span> org-roam-node-insert<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>         <span class=\"token lisp-property property\">:map</span> org-mode-map</pre></td></tr><tr><td data-num=\"16\"></td><td><pre>         <span class=\"token punctuation\">(</span><span class=\"token string\">\"C-M-i\"</span> <span class=\"token punctuation\">.</span> completion-at-point<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>  <span class=\"token lisp-property property\">:config</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>  <span class=\"token punctuation\">(</span><span class=\"token car\">org-roam-setup</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>  <span class=\"token punctuation\">(</span><span class=\"token keyword\">use-package</span> websocket</pre></td></tr><tr><td data-num=\"21\"></td><td><pre>    <span class=\"token lisp-property property\">:ensure</span> <span class=\"token boolean\">t</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>  <span class=\"token punctuation\">(</span><span class=\"token keyword\">use-package</span> simple-httpd</pre></td></tr><tr><td data-num=\"23\"></td><td><pre>    <span class=\"token lisp-property property\">:ensure</span> <span class=\"token boolean\">t</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>  <span class=\"token punctuation\">(</span><span class=\"token car\">add-to-list</span> <span class=\"token quoted-symbol variable symbol\">'load-path</span> <span class=\"token string\">\"~/.emacs.d/site-lisp/org-roam-ui\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>  <span class=\"token punctuation\">(</span><span class=\"token car\">load-library</span> <span class=\"token string\">\"org-roam-ui\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>  <span class=\"token punctuation\">(</span><span class=\"token keyword\">use-package</span> org-roam-ui</pre></td></tr><tr><td data-num=\"27\"></td><td><pre>    <span class=\"token lisp-property property\">:after</span> org-roam</pre></td></tr><tr><td data-num=\"28\"></td><td><pre>    <span class=\"token lisp-property property\">:config</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>    <span class=\"token punctuation\">(</span><span class=\"token keyword\">setq</span> org-roam-ui-sync-theme <span class=\"token boolean\">t</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>          org-roam-ui-follow <span class=\"token boolean\">t</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>          org-roam-ui-follow-mode <span class=\"token boolean\">t</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>          org-roam-ui-update-on-save <span class=\"token boolean\">t</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>          org-roam-ui-open-on-start <span class=\"token boolean\">t</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>  <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre><span class=\"token punctuation\">(</span><span class=\"token keyword\">use-package</span> deft</pre></td></tr><tr><td data-num=\"36\"></td><td><pre>  <span class=\"token lisp-property property\">:ensure</span> <span class=\"token boolean\">t</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>  <span class=\"token lisp-property property\">:after</span> org</pre></td></tr><tr><td data-num=\"38\"></td><td><pre>  <span class=\"token lisp-property property\">:bind</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>  <span class=\"token punctuation\">(</span><span class=\"token string\">\"C-c n d\"</span> <span class=\"token punctuation\">.</span> deft<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>  <span class=\"token lisp-property property\">:custom</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>  <span class=\"token punctuation\">(</span><span class=\"token car\">deft-recursive</span> <span class=\"token boolean\">t</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>  <span class=\"token punctuation\">(</span><span class=\"token car\">deft-use-filter-string-for-filename</span> <span class=\"token boolean\">t</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>  <span class=\"token punctuation\">(</span><span class=\"token car\">deft-default-extension</span> <span class=\"token string\">\"org\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>  <span class=\"token punctuation\">(</span><span class=\"token car\">deft-directory</span> org-roam-directory<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre></pre></td></tr><tr><td data-num=\"46\"></td><td><pre><span class=\"token punctuation\">(</span><span class=\"token keyword\">provide</span> <span class=\"token quoted-symbol variable symbol\">'init-org-roam</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p>在  <code>init.el</code>  中加入：</p>\n<figure class=\"highlight lisp\"><figcaption data-lang=\"lisp\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">(</span><span class=\"token keyword\">require</span> <span class=\"token quoted-symbol variable symbol\">'use-package</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\">;; just for org-roam installation</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">(</span><span class=\"token keyword\">require</span> <span class=\"token quoted-symbol variable symbol\">'init-org-roam</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p>注意这里需要安装  <code>use-package</code> ，如果报错，可以在  <code>Emacs</code>  界面中使用 <span class=\"kbd\">M-x package-install RET use-package RET</span> 进行安装。</p>\n<hr class=\"footnotes-sep\" />\n<section class=\"footnotes\">\n<ol class=\"footnotes-list\">\n<li id=\"fn1\" class=\"footnote-item\"><p><a href=\"https://www.wenhui.space/docs/02-emacs/emacs_org_mode/#%E8%BE%93%E5%85%A5%E6%B3%95%E5%88%87%E6%8D%A2\">emacs org-mode 的使用</a> <a href=\"#fnref1\" class=\"footnote-backref\">↩︎</a></p>\n</li>\n</ol>\n</section>\n",
            "tags": [
                "Computer-Science",
                "Emacs"
            ]
        },
        {
            "id": "https://linn-ylz.com/Computer-Science/Emacs/emacs-learning-2/",
            "url": "https://linn-ylz.com/Computer-Science/Emacs/emacs-learning-2/",
            "title": "Emacs 学习（二）配置自定义及插件",
            "date_published": "2022-01-09T08:20:07.000Z",
            "content_html": "<h1 id=\"基础-elisp\"><a class=\"anchor\" href=\"#基础-elisp\">#</a> 基础  <code>ELisp</code></h1>\n<p>因为本科捣鼓过一点  <code>Lisp</code>  相关的东西，这里就放些简单例子，有需要再详细学习。</p>\n<figure class=\"highlight lisp\"><figcaption data-lang=\"lisp\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">;; 2 + 2</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">(</span><span class=\"token car\">+</span> <span class=\"token number\">2</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token comment\">;; 2 + 3 * 4</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token punctuation\">(</span><span class=\"token car\">+</span> <span class=\"token number\">2</span> <span class=\"token punctuation\">(</span><span class=\"token car\">*</span> <span class=\"token number\">3</span> <span class=\"token number\">4</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token comment\">;; 定义变量</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token punctuation\">(</span><span class=\"token keyword\">setq</span> name <span class=\"token string\">\"username\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token punctuation\">(</span><span class=\"token keyword\">message</span> name<span class=\"token punctuation\">)</span> <span class=\"token comment\">; -> \"username\"</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token comment\">;; 定义函数</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token punctuation\">(</span><span class=\"token defun\"><span class=\"token keyword\">defun</span> <span class=\"token function\">func</span> <span class=\"token punctuation\">(</span><span class=\"token arguments\"></span><span class=\"token punctuation\">)</span></span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>  <span class=\"token punctuation\">(</span><span class=\"token keyword\">message</span> <span class=\"token string\">\"Hello, %s\"</span> name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token comment\">;; 执行函数</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token punctuation\">(</span><span class=\"token car\">func</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">; -> Hello, username</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre></pre></td></tr><tr><td data-num=\"18\"></td><td><pre><span class=\"token comment\">;; 设置快捷键</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre><span class=\"token punctuation\">(</span><span class=\"token car\">global-set-key</span> <span class=\"token punctuation\">(</span><span class=\"token car\">kbd</span> <span class=\"token string\">\"&lt;f1>\"</span><span class=\"token punctuation\">)</span> <span class=\"token quoted-symbol variable symbol\">'func</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre></pre></td></tr><tr><td data-num=\"21\"></td><td><pre><span class=\"token comment\">;; 使函数可直接被调用可添加 (interactive)</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre><span class=\"token punctuation\">(</span><span class=\"token defun\"><span class=\"token keyword\">defun</span> <span class=\"token function\">func</span> <span class=\"token punctuation\">(</span><span class=\"token arguments\"></span><span class=\"token punctuation\">)</span></span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>  <span class=\"token punctuation\">(</span><span class=\"token interactive keyword\">interactive</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>  <span class=\"token punctuation\">(</span><span class=\"token keyword\">message</span> <span class=\"token string\">\"Hello, %s\"</span> name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h2 id=\"循环\"><a class=\"anchor\" href=\"#循环\">#</a> 循环</h2>\n<figure class=\"highlight lisp\"><figcaption data-lang=\"lisp\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">;; 遍历每一个缓冲区（Buffer）</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">(</span><span class=\"token keyword\">cl-loop</span> for buf in <span class=\"token punctuation\">(</span><span class=\"token car\">buffer-list</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>\t collect <span class=\"token punctuation\">(</span><span class=\"token car\">buffer-file-name</span> buf<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token comment\">;; 寻找 729 的平方根（设置最大为 100 为了防止无限循环）</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token punctuation\">(</span><span class=\"token keyword\">cl-loop</span> for x from <span class=\"token number\">1</span> to <span class=\"token number\">100</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>\t for y = <span class=\"token punctuation\">(</span><span class=\"token car\">*</span> x x<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>\t until <span class=\"token punctuation\">(</span><span class=\"token car\">>=</span> y <span class=\"token number\">729</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>\t finally return <span class=\"token punctuation\">(</span><span class=\"token car\">list</span> x <span class=\"token punctuation\">(</span><span class=\"token car\">=</span> y <span class=\"token number\">729</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h2 id=\"quote\"><a class=\"anchor\" href=\"#quote\">#</a> quote</h2>\n<figure class=\"highlight lisp\"><figcaption data-lang=\"lisp\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">;; 下面两行的效果完全相同的</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">(</span><span class=\"token car\">quote</span> foo<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token quoted-symbol variable symbol\">'foo</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token punctuation\">(</span><span class=\"token car\">print</span> <span class=\"token punctuation\">'(</span><span class=\"token car\">+</span> <span class=\"token number\">1</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">;; -> (+ 1 1)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token punctuation\">(</span><span class=\"token car\">print</span> <span class=\"token punctuation\">(</span><span class=\"token car\">+</span> <span class=\"token number\">1</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\">;; -> 2</span></pre></td></tr></table></figure><h1 id=\"配置\"><a class=\"anchor\" href=\"#配置\">#</a> 配置</h1>\n<h2 id=\"前置知识\"><a class=\"anchor\" href=\"#前置知识\">#</a> 前置知识</h2>\n<p><code>Emacs</code>  的配置文件默认保存在  <code>~/.emacs.d/init.el</code>  文件中。（如果其不存在可自行创建， 配置文件也可保存在  <code>~/.emacs</code>  文件中，通常  <code>~/.emacs</code>  的优先级更高）。</p>\n<div class=\"note warning\">\n<p>注意： 如果希望把配置放在～/.emacs.d/init.el 文件中，那么需要手工删除～/.emacs 文件。</p>\n</div>\n<p>为了便于管理，我们采用模块化的方式来存储我们的配置文件。</p>\n<p>一般  <code>~/.emacs.d/</code>  目录中的结构如下：</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>├── auto-save-list <span class=\"token comment\"># 自动生成的保存数据</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>├── elpa           <span class=\"token comment\"># 下载的插件目录</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>├── init.el        <span class=\"token comment\"># 我们的配置文件</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>└── recentf        <span class=\"token comment\"># 最近访问的文件列表</span></pre></td></tr></table></figure><p>通常我们只保存配置文件并对其进行版本控制，其他的插件均在第一次使用编辑器时再通过网络重新下载。</p>\n<p>由于  <code>Elisp</code>  中并没有命名空间（Namespace），所有的变量均为全局变量，所以其命名方法就变的非常重要。一种简单的命名规则如下：</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">#自定义变量可以使用自己的名字作为命名方式（可以是变量名或者函数名）</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>my/XXXX</pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token comment\">#模式命名规则</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>ModeName-mode</pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token comment\">#模式内的变量则可以使用</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>ModeName-VariableName</pre></td></tr></table></figure><p>通常情况使用一个  <code>init.el</code>  文件便足以存储配置的内容，但是当配置内容较多时，使用模块化的设计更加便于管理。我们通常可以将配置文件分为以下几个部分：</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>init-packages.el        <span class=\"token comment\"># 插件管理</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>init-ui.el              <span class=\"token comment\"># 视觉层配置</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>init-better-defaults.el <span class=\"token comment\"># 增强内置功能</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>init-keybindings.el     <span class=\"token comment\"># 快捷键绑定</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>init-org.el             <span class=\"token comment\"># Org 模式相关的全部设定</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>custome.el              <span class=\"token comment\"># 存放使用编辑器接口产生的配置信息</span></pre></td></tr></table></figure><p>在目录中的结构如下：</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>├── init.el</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>└── lisp</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    ├── custom.el</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    ├── init-better-defaults.el</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    ├── init-helper.el</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    ├── init-keybindings.el</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    ├── init-packages.el</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    ├── init-ui.el</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    └── init-org.el</pre></td></tr></table></figure><p>此时  <code>init.el</code>  是所有配置内容的入口，我们可以快速定位想要更改的配置的位置。</p>\n<h2 id=\"major-mode-与-minor-mode\"><a class=\"anchor\" href=\"#major-mode-与-minor-mode\">#</a> Major Mode 与 Minor Mode</h2>\n<p><code>Emacs</code>  中存在 Major Mode 与 Minor Mode 两种 Mode。Major Mode 通常定义对于一种文件类型编辑的核心规则，例如语法高亮、缩进、快捷键绑定等。 而 Minor Mode 是除去 Major Mode 所提供的核心功能以外的额外的编辑功能（辅助功能）。例如在下面的配置文件中  <code>tool-bar-mode</code>  与  <code>linum-mode</code>  等均为 Minor Mode。</p>\n<p>一种文件类型同时只能存在一种 Major Mode，但是它可以同时激活一种或多种 Minor Mode。如果想知道当前的模式信息，可以使用 <span class=\"kbd\">C-h m</span> 来显示当前所有开启的全部的 Minor Mode 的信息。</p>\n<p>在  <code>Emacs</code>  中，Major Mode 又分为三种，</p>\n<ul>\n<li><code>text-mode</code> ，用于编辑文本文件；</li>\n<li><code>special-mode</code> ，特殊模式（很少见）；</li>\n<li><code>prog-mode</code> ，所有的编程语言的父模式；</li>\n</ul>\n<p>在每一个模式（mode）中它的名称与各个变量还有函数都有特定的命名规则，比如所有的模式都被命名为  <code>ModeName-mode</code> ，里面所设置的快捷键则为  <code>ModeName-mode-key-map</code> ，而所有的钩子则会被命名为  <code>ModeName-mode-hook</code> 。</p>\n<h2 id=\"插件包配置\"><a class=\"anchor\" href=\"#插件包配置\">#</a> 插件包配置</h2>\n<p>在  <code>./lisp/init-packages.el</code>  中写入以下内容：</p>\n<figure class=\"highlight lisp\"><figcaption data-lang=\"lisp\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">;;  __        __             __   ___</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\">;; |__)  /\\  /  ` |__/  /\\  / _` |__</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\">;; |    /~~\\ \\__, |  \\ /~~\\ \\__> |___</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token comment\">;;                      __   ___        ___      ___</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token comment\">;; |\\/|  /\\  |\\ |  /\\  / _` |__   |\\/| |__  |\\ |  |</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token comment\">;; |  | /~~\\ | \\| /~~\\ \\__> |___  |  | |___ | \\|  |</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token punctuation\">(</span><span class=\"token keyword\">when</span> <span class=\"token punctuation\">(</span><span class=\"token car\">>=</span> emacs-major-version <span class=\"token number\">24</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token punctuation\">(</span><span class=\"token keyword\">require</span> <span class=\"token quoted-symbol variable symbol\">'package</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token punctuation\">(</span><span class=\"token car\">package-initialize</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token punctuation\">(</span><span class=\"token keyword\">setq</span> package-archives <span class=\"token punctuation\">'(</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"gnu\"</span>   <span class=\"token punctuation\">.</span> <span class=\"token string\">\"http://elpa.emacs-china.org/gnu/\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>\t\t\t <span class=\"token punctuation\">(</span><span class=\"token string\">\"melpa\"</span> <span class=\"token punctuation\">.</span> <span class=\"token string\">\"http://elpa.emacs-china.org/melpa/\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token comment\">;; cl - Common Lisp Extension</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token punctuation\">(</span><span class=\"token keyword\">require</span> <span class=\"token quoted-symbol variable symbol\">'cl</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token comment\">;; Add Packages</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token punctuation\">(</span><span class=\"token defvar\"><span class=\"token keyword\">defvar</span> <span class=\"token variable\">my/packages</span></span> <span class=\"token punctuation\">'(</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    <span class=\"token comment\">;; --- Auto-completion ---</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    company</pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    <span class=\"token comment\">;; --- Better Editor ---</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>    smooth-scrolling</pre></td></tr><tr><td data-num=\"22\"></td><td><pre>    hungry-delete</pre></td></tr><tr><td data-num=\"23\"></td><td><pre>    swiper</pre></td></tr><tr><td data-num=\"24\"></td><td><pre>    counsel</pre></td></tr><tr><td data-num=\"25\"></td><td><pre>    smartparens</pre></td></tr><tr><td data-num=\"26\"></td><td><pre>    popwin</pre></td></tr><tr><td data-num=\"27\"></td><td><pre>    <span class=\"token comment\">;; --- Major Mode ---</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>    js2-mode</pre></td></tr><tr><td data-num=\"29\"></td><td><pre>    markdown-mode</pre></td></tr><tr><td data-num=\"30\"></td><td><pre></pre></td></tr><tr><td data-num=\"31\"></td><td><pre><span class=\"token comment\">;; ...</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre></pre></td></tr><tr><td data-num=\"33\"></td><td><pre><span class=\"token comment\">;; 文件末尾</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre><span class=\"token punctuation\">(</span><span class=\"token keyword\">provide</span> <span class=\"token quoted-symbol variable symbol\">'init-packages</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p>在  <code>init.el</code>  中的入口内容如下：</p>\n<figure class=\"highlight lisp\"><figcaption data-lang=\"lisp\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">(</span><span class=\"token car\">package-initialize</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token punctuation\">(</span><span class=\"token car\">add-to-list</span> <span class=\"token quoted-symbol variable symbol\">'load-path</span> <span class=\"token string\">\"~/.emacs.d/lisp/\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token comment\">;; Package Management</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token comment\">;; -----------------------------------------------------------------</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token punctuation\">(</span><span class=\"token keyword\">require</span> <span class=\"token quoted-symbol variable symbol\">'init-packages</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p>从以上内容我们可以简单总结出配置模块化的一个方法。首先将某部分内容的配置写入相关的文件中，然后和在文件的末尾添加  <code>(provide 'module-name)</code>  以使得其在入口文件中能够被调用。而在入口文件中，我们首先添加  <code>(add-to-list 'load-path &quot;~/.emacs.d/lisp/&quot;)</code> ，从而使得程序能够找到配置文件的位置，然后写入  <code>(require 'module-name)</code>  便能够引入相关配置。</p>\n<h2 id=\"配置推荐\"><a class=\"anchor\" href=\"#配置推荐\">#</a> 配置推荐</h2>\n<p>对于  <code>Emacs</code>  初学者而言，陷入到配置文件的细节中往往会打消其学习的热情。这里推荐一个比较成熟的配置。<sup class=\"footnote-ref\"><a href=\"#fn1\" id=\"fnref1\">[1]</a></sup></p>\n<p>这是 purcell 开源的一套配置，在  <code>GitHub</code>  上目前有超过 6k 个 star，且目前依旧保持更新。</p>\n<p>通过命令：</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">git</span> clone https://github.com/purcell/emacs.d.git ~/.emacs.d</pre></td></tr></table></figure><p>将仓库克隆下来，然后就可以直接使用了。这里需要对  <code>init.el</code>  做些微修改，更换插件源为  <code>Emacs China</code>  中文社区的镜像。由于配置的内容较多，初次打开  <code>Emacs</code>  时需要等待一段时间下载并应用插件。</p>\n<p>如果有自己想要定义的配置，那么可以自己新建一个  <code>.el</code>  文件，按照前文模块化配置的方式加入自己所需的配置。</p>\n<h1 id=\"中文乱码问题\"><a class=\"anchor\" href=\"#中文乱码问题\">#</a> 中文乱码问题</h1>\n<p><code>Emacs</code>  的 GUI 模式不能很好的支持中文。通过  <code>emacs -nw</code>  可以在终端界面显示  <code>Emacs</code>  的界面，这个和  <code>Vim</code>  的显示方式比较相似，且无中文支持的问题。可以在  <code>.bashrc</code>  之类的文件中通过  <code>alias emacs=emacs -nw</code>  来默认终端方式启动。</p>\n<hr class=\"footnotes-sep\" />\n<section class=\"footnotes\">\n<ol class=\"footnotes-list\">\n<li id=\"fn1\" class=\"footnote-item\"><p><a href=\"https://github.com/purcell/emacs.d\"> <code>Emacs</code>  配置推荐</a> <a href=\"#fnref1\" class=\"footnote-backref\">↩︎</a></p>\n</li>\n</ol>\n</section>\n",
            "tags": [
                "Computer-Science",
                "Emacs"
            ]
        },
        {
            "id": "https://linn-ylz.com/Computer-Science/Emacs/emacs-learning-1/",
            "url": "https://linn-ylz.com/Computer-Science/Emacs/emacs-learning-1/",
            "title": "Emacs 学习（一）基本操作",
            "date_published": "2022-01-09T08:13:51.000Z",
            "content_html": "<h1 id=\"前言\"><a class=\"anchor\" href=\"#前言\">#</a> 前言</h1>\n<p>本系列内容基于  <code>Emacs China</code>  提供的教程<sup class=\"footnote-ref\"><a href=\"#fn1\" id=\"fnref1\">[1]</a></sup>。</p>\n<p><code>Emcas</code>  的深入学习可以阅读  <code>GNU</code>  提供的教程<sup class=\"footnote-ref\"><a href=\"#fn2\" id=\"fnref2\">[2]</a></sup>。</p>\n<h1 id=\"预备说明\"><a class=\"anchor\" href=\"#预备说明\">#</a> 预备说明</h1>\n<table>\n<caption id=\"\" style=\"caption-side: bottom\">重要快捷键缩写</caption>\n<thead>\n<tr>\n<th style=\"text-align:left\">快捷键</th>\n<th style=\"text-align:left\">功能</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\"><span class=\"kbd red\">C</span></td>\n<td style=\"text-align:left\"><span class=\"kbd red\">Ctrl</span> 键</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><span class=\"kbd red\">S</span></td>\n<td style=\"text-align:left\"><span class=\"kbd red\">Shift</span> 键</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><span class=\"kbd red\">M</span></td>\n<td style=\"text-align:left\"><span class=\"kbd red\">Alt</span> 键</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><span class=\"kbd red\">RET</span></td>\n<td style=\"text-align:left\"><span class=\"kbd red\">Enter</span> 键</td>\n</tr>\n</tbody>\n</table>\n<p><span class=\"kbd red\">C-x</span> <span class=\"kbd red\">d</span> <span class=\"kbd red\">RET</span> 代表先同时按下 <span class=\"kbd red\">Ctrl</span> 和 <span class=\"kbd red\">x</span>，再按下 <span class=\"kbd red\">d</span>，最后再按下 <span class=\"kbd red\">RET</span>。</p>\n<p><code>Emacs</code>  里的大部分地方都支持自动补全，快捷键是 <span class=\"kbd red\">TAB</span></p>\n<h1 id=\"快捷键\"><a class=\"anchor\" href=\"#快捷键\">#</a> 快捷键</h1>\n<h2 id=\"光标移动\"><a class=\"anchor\" href=\"#光标移动\">#</a> 光标移动</h2>\n<table>\n<caption id=\"1\" style=\"caption-side: bottom\">光标移动快捷键 1</caption>\n<thead>\n<tr>\n<th style=\"text-align:left\">快捷键</th>\n<th style=\"text-align:left\">功能</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\"><span class=\"kbd red\">C-f</span></td>\n<td style=\"text-align:left\">前移一个字符，<span class=\"kbd red\">f</span> 代表 forward；</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><span class=\"kbd red\">C-b</span></td>\n<td style=\"text-align:left\">后移一个字符，<span class=\"kbd red\">b</span> 代表 backward；</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><span class=\"kbd red\">M-f</span></td>\n<td style=\"text-align:left\">前移一个 word；</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><span class=\"kbd red\">M-b</span></td>\n<td style=\"text-align:left\">后移一个 word；</td>\n</tr>\n</tbody>\n</table>\n<table>\n<caption id=\"2\" style=\"caption-side: bottom\">光标移动快捷键 2</caption>\n<thead>\n<tr>\n<th style=\"text-align:left\">快捷键</th>\n<th style=\"text-align:left\">功能</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\"><span class=\"kbd red\">C-p</span></td>\n<td style=\"text-align:left\">上移至前一行，<span class=\"kbd red\">p</span> 代表 previous；</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><span class=\"kbd red\">C-n</span></td>\n<td style=\"text-align:left\">上移至下一行，<span class=\"kbd red\">n</span> 代表 next；</td>\n</tr>\n</tbody>\n</table>\n<table>\n<caption id=\"3\" style=\"caption-side: bottom\">光标移动快捷键 3</caption>\n<thead>\n<tr>\n<th style=\"text-align:left\">快捷键</th>\n<th style=\"text-align:left\">功能</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\"><span class=\"kbd red\">C-a</span></td>\n<td style=\"text-align:left\">移至行首，<span class=\"kbd red\">a</span> 代表 ahead；</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><span class=\"kbd red\">C-e</span></td>\n<td style=\"text-align:left\">移至行尾，<span class=\"kbd red\">e</span> 代表 end；</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><span class=\"kbd red\">M-a</span></td>\n<td style=\"text-align:left\">前移一个 sentence；</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><span class=\"kbd red\">M-e</span></td>\n<td style=\"text-align:left\">后移一个 sentence；</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"屏幕移动\"><a class=\"anchor\" href=\"#屏幕移动\">#</a> 屏幕移动</h2>\n<table>\n<caption id=\"4\" style=\"caption-side: bottom\">屏幕移动快捷键 4</caption>\n<thead>\n<tr>\n<th style=\"text-align:left\">快捷键</th>\n<th style=\"text-align:left\">功能</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\"><span class=\"kbd red\">C-v</span></td>\n<td style=\"text-align:left\">屏幕向下滚动一页，类似于键盘中的 <span class=\"kbd red\">PgUp</span>；</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><span class=\"kbd red\">M-v</span></td>\n<td style=\"text-align:left\">屏幕向上滚动一页，类似于键盘中的 <span class=\"kbd red\">PgDown</span></td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><span class=\"kbd red\">C-l</span></td>\n<td style=\"text-align:left\">屏幕光标内容居中</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><span class=\"kbd red\">M-&lt;</span></td>\n<td style=\"text-align:left\">光标移动到文件最开始的位置，注意 <span class=\"kbd red\">&lt;</span> 需要按住 <span class=\"kbd red\">Shift</span> 键，所以实际上是按住三个键；</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><span class=\"kbd red\">M-&gt;</span></td>\n<td style=\"text-align:left\">光标移动到文件最末尾的位置，同上，需要按住 <span class=\"kbd red\">Shift</span> 键；</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"接收数字作为参数\"><a class=\"anchor\" href=\"#接收数字作为参数\">#</a> 接收数字作为参数</h2>\n<p>上述很多命令均只能移动一个字符、一个 word 或者一个 sentence。在按下按键之前，先按下 <span class=\"kbd red\">C-u</span>，再输入一个数字之后，再按下上述命令，则可以移动更多数量的单位。</p>\n<p>例如：<span class=\"kbd red\">C-u 8 C-f</span> 向前移动 8 个字符。</p>\n<h2 id=\"其他\"><a class=\"anchor\" href=\"#其他\">#</a> 其他</h2>\n<p>打断组合键为 <span class=\"kbd red\">C-g</span> ，它用于终端取消之前的指令。</p>\n<p>编辑器内显示行号可使用 <span class=\"kbd red\">M-x</span>  <code>linum-mode</code>  来开启。</p>\n<h1 id=\"文本编辑操作\"><a class=\"anchor\" href=\"#文本编辑操作\">#</a> 文本编辑操作</h1>\n<p>插入和通常编辑器的文本输入一样。<span class=\"kbd red\">RET</span> 表示回车键 <span class=\"kbd red\">Enter</span>，用于换行。</p>\n<p>使用 <span class=\"kbd red\">DEL</span> 删除，它表示 <span class=\"kbd red\">Backspace</span> 键。这一点也和通常的文本编辑器相同。</p>\n<p>以上这两点是我想要改用  <code>Emacs</code>  的原因，之前尝试深入学习过  <code>Vim</code> ，但是切换模式这种操作方式，让我这种用习惯了普通编辑器的人很不适应。快捷键倒是可以多用多记，但是操作习惯要改变还是很难的，何况平常打字都是这种习惯。因此， <code>Emacs</code>  这种类似于普通编辑器的快捷键方式更符合我自身的习惯。</p>\n<p>除此之外，还有更高级的一些插入和删除方式。</p>\n<h2 id=\"插入\"><a class=\"anchor\" href=\"#插入\">#</a> 插入</h2>\n<p>上文中有提到 <span class=\"kbd red\">C-u 8 C-f</span> 这种形式的命令，普通文本的插入也可以使用这种方式。向编写  <code>C++</code>  代码，添加注释的时候，可能会插入很多个  <code>*</code>  号，使用 <span class=\"kbd red\">C-u 8 *</span> 就可以插入 8 个  <code>*</code>  号。</p>\n<h2 id=\"删除\"><a class=\"anchor\" href=\"#删除\">#</a> 删除</h2>\n<table>\n<caption id=\"1\" style=\"caption-side: bottom\">删除快捷键 1</caption>\n<thead>\n<tr>\n<th style=\"text-align:left\">快捷键</th>\n<th style=\"text-align:left\">功能</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\"><span class=\"kbd red\">DEL</span></td>\n<td style=\"text-align:left\">删除（Delete）光标前的一个字符；</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><span class=\"kbd red\">C-d</span></td>\n<td style=\"text-align:left\">删除光标后的一个字符；</td>\n</tr>\n</tbody>\n</table>\n<table>\n<caption id=\"2\" style=\"caption-side: bottom\">删除快捷键 2</caption>\n<thead>\n<tr>\n<th style=\"text-align:left\">快捷键</th>\n<th style=\"text-align:left\">功能</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\"><span class=\"kbd red\">M-DEL</span></td>\n<td style=\"text-align:left\">剪切（Kill）光标当前所在 word 的起始位置到光标位置的字符；</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><span class=\"kbd red\">M-d</span></td>\n<td style=\"text-align:left\">剪切光标到光标当前所在 word 的终止位置的字符；</td>\n</tr>\n</tbody>\n</table>\n<table>\n<caption id=\"3\" style=\"caption-side: bottom\">删除快捷键 3</caption>\n<thead>\n<tr>\n<th style=\"text-align:left\">快捷键</th>\n<th style=\"text-align:left\">功能</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\"><span class=\"kbd red\">C-k</span></td>\n<td style=\"text-align:left\">剪切光标到当前行末尾的所有字符；（不包含换行符）</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><span class=\"kbd red\">M-k</span></td>\n<td style=\"text-align:left\">剪切光标到当前句子末尾的所有字符；（他们的差别类似于 <span class=\"kbd red\">C-e</span> 和 <span class=\"kbd red\">M-e</span>）</td>\n</tr>\n</tbody>\n</table>\n<p>对一个非空行使用 <span class=\"kbd red\">C-k</span> 并不会剪切该行的换行符，此时如果再按下一次，则换行符也被剪切掉，而  <code>Windows</code>  中通常的 <span class=\"kbd red\">Ctrl-x</span> 则直接包含换行符。</p>\n<p>如果在 <span class=\"kbd red\">C-k</span> 前接上 <span class=\"kbd red\">C-u 2</span> 这样的内容，则表示剪切多行，并且<ins class=\"danger\">包含</ins>换行符。这个连续按多次 <span class=\"kbd red\">C-k</span> 是不一样的。</p>\n<p>另一点不同则是，在同一行连续使用 <span class=\"kbd red\">C-k</span>，多次剪切的内容会存储在一起，在粘贴的时候所有内容会一并粘贴。</p>\n<p><code>Emacs</code>  文档中使用 Delete 表示删除，Kill 表示剪切的含义。</p>\n<h2 id=\"选中\"><a class=\"anchor\" href=\"#选中\">#</a> 选中</h2>\n<p>在想要选中的起始位置按下 <span class=\"kbd red\">C-SPC</span>，即 <span class=\"kbd red\">Ctrl</span> 和 <span class=\"kbd red\">Space</span> 键，此时底部信息栏会显示  <code>Mark set</code> ，表示进入选中模式；移动光标直到其包含所有想要选中的内容，按下 <span class=\"kbd red\">C-w</span> 会将选中的文本剪切。使用 <span class=\"kbd red\">M-w</span> 则是进行复制。</p>\n<h2 id=\"粘贴\"><a class=\"anchor\" href=\"#粘贴\">#</a> 粘贴</h2>\n<p><code>Emacs</code>  中使用 yank 表示粘贴，使用 <span class=\"kbd red\">C-y</span> 进行粘贴操作。</p>\n<p>如果想要粘贴的内容不是最近剪切的，那么使用 <span class=\"kbd red\">M-y</span> 可以对粘贴的内容进行替换，连续按下便会一直替换，直到又重新循环到最近剪切的内容。</p>\n<p>而 <span class=\"kbd red\">M-y</span> 还可以添加正整数或者负整数作为参数，选择粘贴的内容。</p>\n<h2 id=\"搜索\"><a class=\"anchor\" href=\"#搜索\">#</a> 搜索</h2>\n<p><code>Emacs</code>  搜索是增量式（incremental）的，当输入内容时即开始搜索。使用 <span class=\"kbd red\">C-s</span> 向前跳转，使用 <span class=\"kbd red\">C-r</span> 向后跳转。按下回车将会终止搜索，<span class=\"kbd red\">C-g</span> 同样能够终止搜索。</p>\n<h2 id=\"撤销\"><a class=\"anchor\" href=\"#撤销\">#</a> 撤销</h2>\n<p><span class=\"kbd red\">C-/</span> 用于撤销。连续使用多次则可以逐次撤回过往的编辑内容。<span class=\"kbd red\">C-_</span> 与 <span class=\"kbd red\">C-/</span> 等价。<span class=\"spoiler\" title=\"你知道得太多了\">但是这个按键位置有点奇怪...</span></p>\n<p><span class=\"kbd red\">C-x u</span> 也是撤销功能，但是需要按两次按键，不那么方便。</p>\n<h2 id=\"文件操作\"><a class=\"anchor\" href=\"#文件操作\">#</a> 文件操作</h2>\n<p><code>Emacs</code>  界面底部的信息栏左下角，显示当前编辑的文件名称。</p>\n<table>\n<caption id=\"1\" style=\"caption-side: bottom\">文件操作快捷键 1</caption>\n<thead>\n<tr>\n<th style=\"text-align:left\">快捷键</th>\n<th style=\"text-align:left\">功能</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\"><span class=\"kbd red\">C-x C-f</span></td>\n<td style=\"text-align:left\">打开目标文件， f 代表 find/file；</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><span class=\"kbd red\">C-x C-s</span></td>\n<td style=\"text-align:left\">保存当前缓冲区（Buffer）， s 代表 save。</td>\n</tr>\n</tbody>\n</table>\n<p><span class=\"kbd red\">C-x</span> 是  <code>Emacs</code>  的快捷键中常用的前缀命令。其它常见的还有 <span class=\"kbd red\">C-c</span>, <span class=\"kbd red\">C-h</span>。</p>\n<p><code>Emacs</code>  存储文件时，会临时在原文件名称的末尾添加  <code>~</code>  后缀（这点和  <code>Office</code>  有些类似），以防止原文件丢失。</p>\n<h2 id=\"缓冲区\"><a class=\"anchor\" href=\"#缓冲区\">#</a> 缓冲区</h2>\n<p>如果我们在已有打开文件的同时，打开一个新的文件，之前的文件仍旧保留在  <code>Emacs</code>  的缓冲区之中。此时可以通过 <span class=\"kbd red\">C-x C-f</span> 指令切换到该文件（就是打开目标文件的指令）。</p>\n<p>使用 <span class=\"kbd red\">C-x C-b</span> 可以查看当前的缓冲区列表。再使用 [C-x 1] 可以退出缓冲区列表界面。</p>\n<p>当有多个缓冲区希望保存时，可以使用 {C-x s}{.kbd .red}，此时  <code>Emacs</code>  会对每个发生了修改的缓冲区进行询问，我们可以选择是否保存该缓冲区。</p>\n<h2 id=\"关闭-emacs\"><a class=\"anchor\" href=\"#关闭-emacs\">#</a> 关闭  <code>Emacs</code></h2>\n<p>使用 <span class=\"kbd red\">C-x C-c</span> 关闭  <code>Emacs</code> ，在关闭前，会询问是否真的要关闭软件。</p>\n<h1 id=\"扩展指令集\"><a class=\"anchor\" href=\"#扩展指令集\">#</a> 扩展指令集</h1>\n<p><code>Emacs</code>  可以使用 <span class=\"kbd red\">C-x</span> 或者 <span class=\"kbd red\">M-x</span> 使用扩展指令，<span class=\"kbd red\">C-x</span> 接续一个按键指令，而 <span class=\"kbd red\">M-x</span> 则接续一个较长的命令名称，通常用于使用频率较少的指令。</p>\n<p>对于 <span class=\"kbd red\">M-x</span> 执行的指令，可以通过 <span class=\"kbd red\">Tab</span> 进行补全。</p>\n<h1 id=\"窗口\"><a class=\"anchor\" href=\"#窗口\">#</a> 窗口</h1>\n<p>在分屏操作之前，先学习一个新的命令 <span class=\"kbd red\">C-x 1</span>，它将当前光标所在窗口最大化，并关闭其他所有窗口。</p>\n<p><span class=\"kbd red\">C-x 2</span> 在窗口底部创建一个新的子窗口。通过 <span class=\"kbd red\">C-x o</span> 可以在不同窗口之间进行切换，o 在这里表示 other。可以通过 <span class=\"kbd red\">C-M-S-v</span> 使得另一个窗口的内容向下滚动，而不需要切换窗口。</p>\n<p><span class=\"kbd red\">C-x 3</span> 则是在当前窗口右侧创建一个新的子窗口。</p>\n<p><span class=\"kbd red\">C-x 5 2</span> 可以创建一个新的窗口，<span class=\"kbd red\">C-x 5 0</span> 可以关闭当前光标所在窗口。当我们较慢速度输入指令的时候，可以看到其他可用的指令，这是只需要按下对应的按键即可。</p>\n<h2 id=\"获取帮助\"><a class=\"anchor\" href=\"#获取帮助\">#</a> 获取帮助</h2>\n<p><code>Emacs</code>  是一个富文档编辑器（Self document, extensible editor），而下面的三种方法在学习 Emacs 的过程中也非常重要。他们分别是：</p>\n<table>\n<caption id=\"\" style=\"caption-side: bottom\">帮助相关快捷键</caption>\n<thead>\n<tr>\n<th style=\"text-align:left\">快捷键</th>\n<th style=\"text-align:left\">功能</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\"><span class=\"kbd red\">C-h c</span></td>\n<td style=\"text-align:left\">显示快捷键的功能；</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><span class=\"kbd red\">C-h k</span></td>\n<td style=\"text-align:left\">寻找快捷键对应函数的文档；</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><span class=\"kbd red\">C-h v</span></td>\n<td style=\"text-align:left\">寻找变量的帮助信息；</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><span class=\"kbd red\">C-h f</span></td>\n<td style=\"text-align:left\">寻找函数的帮助信息；</td>\n</tr>\n</tbody>\n</table>\n<hr class=\"footnotes-sep\" />\n<section class=\"footnotes\">\n<ol class=\"footnotes-list\">\n<li id=\"fn1\" class=\"footnote-item\"><p><a href=\"https://book.emacs-china.org/\">Emacs 教程</a> <a href=\"#fnref1\" class=\"footnote-backref\">↩︎</a></p>\n</li>\n<li id=\"fn2\" class=\"footnote-item\"><p><a href=\"https://www.gnu.org/software/emacs/manual/html_mono/eintr.html\">An Introduction to Programming in Emacs Lisp</a> <a href=\"#fnref2\" class=\"footnote-backref\">↩︎</a></p>\n</li>\n</ol>\n</section>\n",
            "tags": [
                "Computer-Science",
                "Emacs"
            ]
        }
    ]
}